{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Appointment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport TimePicker from 'react-time-picker';\nimport 'react-calendar/dist/Calendar.css';\nimport { Link } from 'react-router-dom';\nimport './Calender.css';\nimport './Clock.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport Sidebar from './Sidebar';\nimport { useLocation } from 'react-router-dom';\nimport { db, authentication } from '../firebase-config';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { collection, getDocs, where, query } from 'firebase/firestore'; //import StripeContainer from './StripeContainer';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Appointment() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [date, setDate] = useState(new Date());\n  const [time, setTime] = useState(\"\");\n  const [slots, setSlots] = useState([]);\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\n  useEffect(() => {\n    if (!authentication.currentUser) {\n      navigate('/login');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splash\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    }\n\n    getSlots();\n  }, []);\n  useEffect(() => {\n    (async function getAppointments() {\n      let list = [];\n      const docRef = await getDocs(query(collection(db, 'appointments'), where('doctorId', '==', `${location.state.id}`)));\n      docRef.forEach(each => {\n        console.log(each.data());\n        list.push({\n          id: each.id,\n          ...each.data()\n        });\n      });\n      setSelectedAppointments(list);\n    })();\n  }, []);\n\n  function getSlots() {\n    let list = [];\n    let x = {\n      slotInterval: 30,\n      openTime: location.state.startTime,\n      closeTime: location.state.endTime\n    };\n    let startTime = moment(x.openTime, \"HH:mm\");\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\n\n    while (startTime < endTime) {\n      const slot = startTime.format(\"HH:mm\");\n\n      for (let i = 0; i < selectedAppointments.length; i++) {\n        if (selectedAppointments[i].timeSlot === slot && !list.includes(slot)) {\n          list.push(slot);\n        }\n      }\n\n      startTime.add(x.slotInterval, 'minutes');\n    }\n\n    setSlots(list);\n  }\n\n  function nextStep() {\n    var _authentication$curre;\n\n    if (!date || !time) {\n      alert(\"Please select date or time\");\n      return;\n    }\n\n    navigate('/stripeContainer', {\n      state: {\n        id: location.state.id,\n        patientId: (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email,\n        date: date,\n        timeSlot: time\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"date-heading\",\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setDate,\n            value: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [\"Selected date: \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"time-heading\",\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-time\",\n          children: [\"Selected Time:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeslots\",\n            children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn_slot ${slot === time && 'btn-selected'}`,\n              onClick: () => setTime(slot),\n              children: slot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Appointment-button\",\n          onClick: nextStep,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"book\",\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Appointment, \"CMgYLIJhyxQbRAu8PrjUniUUudo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Appointment;\nexport default Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/src/Pages/Appointment.js"],"names":["useState","Calendar","TimePicker","Link","useNavigate","useEffect","Sidebar","useLocation","db","authentication","Moment","moment","collection","getDocs","where","query","Appointment","navigate","location","date","setDate","Date","time","setTime","slots","setSlots","selectedAppointments","setSelectedAppointments","currentUser","getSlots","getAppointments","list","docRef","state","id","forEach","each","console","log","data","push","x","slotInterval","openTime","startTime","closeTime","endTime","add","slot","format","i","length","timeSlot","includes","nextStep","alert","patientId","email","toDateString","map"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './Calender.css';\r\nimport './Clock.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  useEffect } from \"react\";\r\nimport Sidebar from './Sidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { db,authentication } from '../firebase-config';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { collection, getDocs, where, query } from 'firebase/firestore';\r\n//import StripeContainer from './StripeContainer';\r\n\r\nfunction Appointment() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(\"\");\r\n  const [slots, setSlots] = useState([]);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n      if(!authentication.currentUser){\r\n          navigate('/login');\r\n          return <div className='splash'>\r\n              Loading\r\n          </div>\r\n      }\r\n      getSlots();\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    (async function getAppointments(){\r\n      let list =[];\r\n        const docRef = await getDocs(query(collection(db, 'appointments'),where('doctorId', '==', `${location.state.id}`)));\r\n        docRef.forEach((each)=>{\r\n          console.log(each.data())\r\n          list.push({id:each.id, ...each.data()})\r\n        })\r\n        setSelectedAppointments(list);\r\n    }());\r\n  },[])\r\n\r\n  function getSlots(){\r\n    let list = [];\r\n    let x = {\r\n        slotInterval: 30,\r\n        openTime: location.state.startTime,\r\n        closeTime: location.state.endTime\r\n      };\r\n    let startTime = moment(x.openTime, \"HH:mm\");\r\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\r\n\r\n    while (startTime < endTime) {\r\n      const slot = startTime.format(\"HH:mm\");\r\n        for(let i = 0; i<selectedAppointments.length; i++){\r\n          if((selectedAppointments[i].timeSlot === slot) && !list.includes(slot)){\r\n            list.push(slot); \r\n          }\r\n        }\r\n        startTime.add(x.slotInterval, 'minutes');\r\n      }\r\n      \r\n    setSlots(list);\r\n}\r\n  function nextStep(){\r\n    if(!date || !time){\r\n      alert(\"Please select date or time\")\r\n      return;\r\n    }\r\n    navigate('/stripeContainer', { state: { id: location.state.id, patientId:authentication.currentUser?.email, date: date, timeSlot: time }})\r\n\r\n  }\r\n  return (<><Sidebar>\r\n    <div className='main-main'>\r\n      <div className='search-heading'>Appointment</div>\r\n      <div className='calendar-container'>\r\n         <h1 className='date-heading'>Select Date</h1>\r\n        <Calendar onChange={setDate} value={date} />\r\n      </div>\r\n      <div className=\"selected-date\">\r\n      Selected date: {date.toDateString()}\r\n   </div>\r\n          <div className='time-container'>\r\n          <h1 className='time-heading'>Select Time</h1>\r\n          </div>\r\n          <div className=\"selected-time\">\r\n      Selected Time:\r\n      <div className='timeslots'>{\r\n            \r\n            slots.map((slot)=>\r\n            <button className={`btn_slot ${slot===time && 'btn-selected'}`} onClick={()=>setTime(slot)}>{slot}</button>)\r\n    \r\n        \r\n\r\n}</div>\r\n   </div>\r\n\r\n\r\n          <button className=\"Appointment-button\"  onClick={nextStep}\r\n      >\r\n       <h5 className=\"book\">Book Appointment</h5>\r\n      </button>\r\n\r\n\r\n\r\n    </div></Sidebar>\r\n    </> );\r\n}\r\n\r\nexport default Appointment;"]},"metadata":{},"sourceType":"module"}