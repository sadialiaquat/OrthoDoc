{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\ViewProfileOfDoctor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AdminSidebar from \"./AdminSidebar\";\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { db } from '../firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { FaUserCircle } from \"react-icons/fa\";\nimport moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewProfileOfDoctor() {\n  _s();\n\n  const location = useLocation();\n  const [users, setUsers] = useState([]);\n  const [mail, setMail] = useState(location.state.id);\n  const [slots, setSlots] = useState(null);\n\n  function getSlots() {\n    let x = {\n      slotInterval: 30,\n      openTime: '09:00',\n      closeTime: '17:00'\n    };\n    let startTime = moment(x.openTime, \"HH:mm\");\n    let endTime = moment(x.closeTime, \"HH:mm\").add(1, 'days');\n\n    while (startTime < endTime) {\n      slots.push(startTime.format(\"HH:mm\"));\n      startTime.add(x.slotInterval, 'minutes');\n    }\n  }\n\n  const fetchData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"doctors\"));\n      querySnapshot.forEach(doc => {\n        if (mail === doc.data().email) {\n          setUsers(prev => [...prev, doc.data()]);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    getSlots();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AdminSidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"View Doctor Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), slots.map(slot => {\n          console.log(slot);\n        }), users.map((item, key) => item.address.map((itm, k) => {\n          var _item$displayName, _item$phoneNumber;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-main-a\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-v\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaUserCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"markk\",\n              children: [\" \", (_item$displayName = item.displayName) !== null && _item$displayName !== void 0 ? _item$displayName : item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email address: \", mail]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone Number: \", (_item$phoneNumber = item.phoneNumber) !== null && _item$phoneNumber !== void 0 ? _item$phoneNumber : item.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Street No: \", itm[0].streetNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"District: \", itm[0].district]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"City: \", itm[0].city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Region:\", itm[0].region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this);\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewProfileOfDoctor, \"UNxxY5KVq0sKyP3p0yp3ybT7jLE=\", false, function () {\n  return [useLocation];\n});\n\n_c = ViewProfileOfDoctor;\nexport default ViewProfileOfDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProfileOfDoctor\");","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/src/Pages/ViewProfileOfDoctor.js"],"names":["React","AdminSidebar","useLocation","useState","useEffect","db","collection","getDocs","FaUserCircle","moment","ViewProfileOfDoctor","location","users","setUsers","mail","setMail","state","id","slots","setSlots","getSlots","x","slotInterval","openTime","closeTime","startTime","endTime","add","push","format","fetchData","querySnapshot","forEach","doc","data","email","prev","err","console","log","map","slot","item","key","address","itm","k","displayName","name","phoneNumber","contact","streetNumber","district","city","region"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AdminSidebar from \"./AdminSidebar\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { db } from '../firebase-config';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport moment from 'react-moment';\r\n\r\nfunction ViewProfileOfDoctor() {\r\n    const location = useLocation();\r\n    const [users, setUsers] = useState([]);\r\n    const [mail, setMail] = useState(location.state.id);\r\n    const [slots, setSlots] = useState(null);\r\n    \r\n    function getSlots(){\r\n        let x = {\r\n            slotInterval: 30,\r\n            openTime: '09:00',\r\n            closeTime: '17:00'\r\n          };\r\n        let startTime = moment(x.openTime, \"HH:mm\");\r\n        let endTime = moment(x.closeTime, \"HH:mm\").add(1, 'days');\r\n    \r\n        while (startTime < endTime) {\r\n            slots.push(startTime.format(\"HH:mm\")); \r\n            startTime.add(x.slotInterval, 'minutes');\r\n          }\r\n    }\r\n    const fetchData = async () => {\r\n        try {\r\n            const querySnapshot = await getDocs(collection(db, \"doctors\"));\r\n            querySnapshot.forEach((doc) => {\r\n                if (mail === doc.data().email) {\r\n                    setUsers((prev) => [...prev, doc.data()]);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n        getSlots();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <AdminSidebar>\r\n                <div className=\"main-main\">\r\n                    <div className=\"search-heading\">View Doctor Profile</div>\r\n                    {\r\n                        slots.map((slot)=>{\r\n                            console.log(slot)\r\n                        })\r\n                    }\r\n                    {users.map((item, key) => (\r\n                        item.address.map(\r\n                            (itm, k) => (\r\n                                <div className='view-main-a'>\r\n                                      <div className='profile-v'> <FaUserCircle/></div>\r\n                                    <p className='markk'> {item.displayName ?? item.name}</p>\r\n                                    <p>Email address: {mail}</p>\r\n                                    <p>Phone Number: {item.phoneNumber ?? item.contact}</p>\r\n                                    <p>Street No: {itm[0].streetNumber}</p>\r\n                                    <p>District: {itm[0].district}</p>\r\n                                    <p>City: {itm[0].city}</p>\r\n                                    <p>Region:{itm[0].region}</p>\r\n \r\n                                  \r\n                                </div>\r\n\r\n\r\n                            )\r\n                        )\r\n                    ))}\r\n\r\n                </div>\r\n            </AdminSidebar>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default ViewProfileOfDoctor; "]},"metadata":{},"sourceType":"module"}