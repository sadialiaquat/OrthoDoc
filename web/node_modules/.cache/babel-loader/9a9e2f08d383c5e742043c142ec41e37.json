{"ast":null,"code":"import memoize from 'lodash.memoize';\n\nfunction resolver(options) {\n  return JSON.stringify(options);\n}\n\nfunction uniqDefined(arr) {\n  return arr.filter(function (el, index) {\n    return el && arr.indexOf(el) === index;\n  });\n}\n\nfunction normalizeLocales(arr) {\n  return arr.map(function (el) {\n    if (!el || el.indexOf('-') === -1 || el.toLowerCase() !== el) {\n      return el;\n    }\n\n    var splitEl = el.split('-');\n    return splitEl[0] + \"-\" + splitEl[1].toUpperCase();\n  });\n}\n\nfunction getUserLocalesInternal(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$useFallbackLocal = _ref.useFallbackLocale,\n      useFallbackLocale = _ref$useFallbackLocal === void 0 ? true : _ref$useFallbackLocal,\n      _ref$fallbackLocale = _ref.fallbackLocale,\n      fallbackLocale = _ref$fallbackLocale === void 0 ? 'en-US' : _ref$fallbackLocale;\n\n  var languageList = [];\n\n  if (typeof window !== 'undefined') {\n    var _window = window,\n        navigator = _window.navigator;\n    languageList = languageList.concat(navigator.languages, navigator.language, navigator.userLanguage, navigator.browserLanguage, navigator.systemLanguage);\n  }\n\n  if (useFallbackLocale) {\n    languageList.push(fallbackLocale);\n  }\n\n  return normalizeLocales(uniqDefined(languageList));\n}\n\nexport var getUserLocales = memoize(getUserLocalesInternal, resolver);\n\nfunction getUserLocaleInternal(options) {\n  return getUserLocales(options)[0] || null;\n}\n\nexport var getUserLocale = memoize(getUserLocaleInternal, resolver);\nexport default getUserLocale;","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/node_modules/get-user-locale/dist/esm/index.js"],"names":["memoize","resolver","options","JSON","stringify","uniqDefined","arr","filter","el","index","indexOf","normalizeLocales","map","toLowerCase","splitEl","split","toUpperCase","getUserLocalesInternal","_temp","_ref","_ref$useFallbackLocal","useFallbackLocale","_ref$fallbackLocale","fallbackLocale","languageList","window","_window","navigator","concat","languages","language","userLanguage","browserLanguage","systemLanguage","push","getUserLocales","getUserLocaleInternal","getUserLocale"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,SAAOC,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAP;AACD;;AAED,SAASG,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,GAAG,CAACC,MAAJ,CAAW,UAAUC,EAAV,EAAcC,KAAd,EAAqB;AACrC,WAAOD,EAAE,IAAIF,GAAG,CAACI,OAAJ,CAAYF,EAAZ,MAAoBC,KAAjC;AACD,GAFM,CAAP;AAGD;;AAED,SAASE,gBAAT,CAA0BL,GAA1B,EAA+B;AAC7B,SAAOA,GAAG,CAACM,GAAJ,CAAQ,UAAUJ,EAAV,EAAc;AAC3B,QAAI,CAACA,EAAD,IAAOA,EAAE,CAACE,OAAH,CAAW,GAAX,MAAoB,CAAC,CAA5B,IAAiCF,EAAE,CAACK,WAAH,OAAqBL,EAA1D,EAA8D;AAC5D,aAAOA,EAAP;AACD;;AAED,QAAIM,OAAO,GAAGN,EAAE,CAACO,KAAH,CAAS,GAAT,CAAd;AACA,WAAOD,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmBA,OAAO,CAAC,CAAD,CAAP,CAAWE,WAAX,EAA1B;AACD,GAPM,CAAP;AAQD;;AAED,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,qBAAqB,GAAGD,IAAI,CAACE,iBADjC;AAAA,MAEIA,iBAAiB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAFlE;AAAA,MAGIE,mBAAmB,GAAGH,IAAI,CAACI,cAH/B;AAAA,MAIIA,cAAc,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,OAAjC,GAA2CA,mBAJhE;;AAMA,MAAIE,YAAY,GAAG,EAAnB;;AAEA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,OAAO,GAAGD,MAAd;AAAA,QACIE,SAAS,GAAGD,OAAO,CAACC,SADxB;AAEAH,IAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBD,SAAS,CAACE,SAA9B,EAAyCF,SAAS,CAACG,QAAnD,EAA6DH,SAAS,CAACI,YAAvE,EAAqFJ,SAAS,CAACK,eAA/F,EAAgHL,SAAS,CAACM,cAA1H,CAAf;AACD;;AAED,MAAIZ,iBAAJ,EAAuB;AACrBG,IAAAA,YAAY,CAACU,IAAb,CAAkBX,cAAlB;AACD;;AAED,SAAOZ,gBAAgB,CAACN,WAAW,CAACmB,YAAD,CAAZ,CAAvB;AACD;;AAED,OAAO,IAAIW,cAAc,GAAGnC,OAAO,CAACiB,sBAAD,EAAyBhB,QAAzB,CAA5B;;AAEP,SAASmC,qBAAT,CAA+BlC,OAA/B,EAAwC;AACtC,SAAOiC,cAAc,CAACjC,OAAD,CAAd,CAAwB,CAAxB,KAA8B,IAArC;AACD;;AAED,OAAO,IAAImC,aAAa,GAAGrC,OAAO,CAACoC,qBAAD,EAAwBnC,QAAxB,CAA3B;AACP,eAAeoC,aAAf","sourcesContent":["import memoize from 'lodash.memoize';\n\nfunction resolver(options) {\n  return JSON.stringify(options);\n}\n\nfunction uniqDefined(arr) {\n  return arr.filter(function (el, index) {\n    return el && arr.indexOf(el) === index;\n  });\n}\n\nfunction normalizeLocales(arr) {\n  return arr.map(function (el) {\n    if (!el || el.indexOf('-') === -1 || el.toLowerCase() !== el) {\n      return el;\n    }\n\n    var splitEl = el.split('-');\n    return splitEl[0] + \"-\" + splitEl[1].toUpperCase();\n  });\n}\n\nfunction getUserLocalesInternal(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$useFallbackLocal = _ref.useFallbackLocale,\n      useFallbackLocale = _ref$useFallbackLocal === void 0 ? true : _ref$useFallbackLocal,\n      _ref$fallbackLocale = _ref.fallbackLocale,\n      fallbackLocale = _ref$fallbackLocale === void 0 ? 'en-US' : _ref$fallbackLocale;\n\n  var languageList = [];\n\n  if (typeof window !== 'undefined') {\n    var _window = window,\n        navigator = _window.navigator;\n    languageList = languageList.concat(navigator.languages, navigator.language, navigator.userLanguage, navigator.browserLanguage, navigator.systemLanguage);\n  }\n\n  if (useFallbackLocale) {\n    languageList.push(fallbackLocale);\n  }\n\n  return normalizeLocales(uniqDefined(languageList));\n}\n\nexport var getUserLocales = memoize(getUserLocalesInternal, resolver);\n\nfunction getUserLocaleInternal(options) {\n  return getUserLocales(options)[0] || null;\n}\n\nexport var getUserLocale = memoize(getUserLocaleInternal, resolver);\nexport default getUserLocale;"]},"metadata":{},"sourceType":"module"}