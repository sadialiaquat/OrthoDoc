{"ast":null,"code":"/**\n * Geocoder\n */\n\n/**\n * Module Dependencies\n */\n\n/**\n * Version\n */\nvar version = '0.2.3';\n/**\n * Geocoder\n */\n\nfunction Geocoder() {\n  this.selectProvider(\"google\");\n}\n\n;\n/**\n * Geocoder prototype\n */\n\nGeocoder.prototype = {\n  /**\n   * Selects a webservice provider\n   *\n   * @param {String} name, required\n   * @param {Object} opts, optional\n   * @api public\n   */\n  selectProvider: function (name, opts) {\n    if (!name) {\n      return cbk(new Error(\"Geocoder.selectProvider requires a name.\"));\n    }\n\n    this.provider = name;\n    this.providerOpts = opts || {};\n    this.providerObj = require(\"./providers/\" + name);\n  },\n\n  /**\n   * Request geocoordinates of given `loc` from Google\n   *\n   * @param {String} loc, required\n   * @param {Function} cbk, required\n   * @param {Object} opts, optional\n   * @api public\n   */\n  geocode: function (loc, cbk, opts) {\n    if (!loc) {\n      return cbk(new Error(\"Geocoder.geocode requires a location.\"));\n    }\n\n    return this.providerObj.geocode(this.providerOpts, loc, cbk, opts);\n  },\n  reverseGeocode: function (lat, lng, cbk, opts) {\n    if (!lat || !lng) {\n      return cbk(new Error(\"Geocoder.reverseGeocode requires a latitude and longitude.\"));\n    }\n\n    return this.providerObj.reverseGeocode(this.providerOpts, lat, lng, cbk, opts);\n  },\n\n  /**\n   * Return Geocoder version\n   *\n   * @api public\n   */\n  version: version\n};\n/**\n * Export\n */\n\nmodule.exports = new Geocoder();","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/node_modules/geocoder/index.js"],"names":["version","Geocoder","selectProvider","prototype","name","opts","cbk","Error","provider","providerOpts","providerObj","require","geocode","loc","reverseGeocode","lat","lng","module","exports"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,OAAO,GAAG,OAAd;AAGA;AACA;AACA;;AAEA,SAASC,QAAT,GAAqB;AACnB,OAAKC,cAAL,CAAoB,QAApB;AACD;;AAAA;AAED;AACA;AACA;;AAEAD,QAAQ,CAACE,SAAT,GAAqB;AAGnB;AACF;AACA;AACA;AACA;AACA;AACA;AAEED,EAAAA,cAAc,EAAE,UAAWE,IAAX,EAAiBC,IAAjB,EAAwB;AAEtC,QAAK,CAAED,IAAP,EAAc;AACZ,aAAOE,GAAG,CAAE,IAAIC,KAAJ,CAAW,0CAAX,CAAF,CAAV;AACD;;AAED,SAAKC,QAAL,GAAgBJ,IAAhB;AACA,SAAKK,YAAL,GAAoBJ,IAAI,IAAI,EAA5B;AACA,SAAKK,WAAL,GAAmBC,OAAO,CAAC,iBAAeP,IAAhB,CAA1B;AAED,GArBkB;;AAuBnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEEQ,EAAAA,OAAO,EAAE,UAAWC,GAAX,EAAgBP,GAAhB,EAAqBD,IAArB,EAA4B;AAEnC,QAAK,CAAEQ,GAAP,EAAa;AACT,aAAOP,GAAG,CAAE,IAAIC,KAAJ,CAAW,uCAAX,CAAF,CAAV;AACH;;AAED,WAAO,KAAKG,WAAL,CAAiBE,OAAjB,CAAyB,KAAKH,YAA9B,EAA4CI,GAA5C,EAAiDP,GAAjD,EAAsDD,IAAtD,CAAP;AAED,GAxCkB;AA0CnBS,EAAAA,cAAc,EAAE,UAAWC,GAAX,EAAgBC,GAAhB,EAAqBV,GAArB,EAA0BD,IAA1B,EAAiC;AAC/C,QAAK,CAACU,GAAD,IAAQ,CAACC,GAAd,EAAoB;AAClB,aAAOV,GAAG,CAAE,IAAIC,KAAJ,CAAW,4DAAX,CAAF,CAAV;AACD;;AAED,WAAO,KAAKG,WAAL,CAAiBI,cAAjB,CAAgC,KAAKL,YAArC,EAAmDM,GAAnD,EAAwDC,GAAxD,EAA6DV,GAA7D,EAAkED,IAAlE,CAAP;AAED,GAjDkB;;AAmDnB;AACF;AACA;AACA;AACA;AAEEL,EAAAA,OAAO,EAAEA;AAzDU,CAArB;AA6DA;AACA;AACA;;AAEAiB,MAAM,CAACC,OAAP,GAAiB,IAAIjB,QAAJ,EAAjB","sourcesContent":["/**\n * Geocoder\n */\n\n/**\n * Module Dependencies\n */\n\n/**\n * Version\n */\n\nvar version = '0.2.3';\n\n\n/**\n * Geocoder\n */\n\nfunction Geocoder () {\n  this.selectProvider(\"google\");\n};\n\n/**\n * Geocoder prototype\n */\n\nGeocoder.prototype = {\n\n\n  /**\n   * Selects a webservice provider\n   *\n   * @param {String} name, required\n   * @param {Object} opts, optional\n   * @api public\n   */\n\n  selectProvider: function ( name, opts ) {\n\n    if ( ! name ) {\n      return cbk( new Error( \"Geocoder.selectProvider requires a name.\") );\n    }\n\n    this.provider = name;\n    this.providerOpts = opts || {};\n    this.providerObj = require(\"./providers/\"+name);\n\n  },\n\n  /**\n   * Request geocoordinates of given `loc` from Google\n   *\n   * @param {String} loc, required\n   * @param {Function} cbk, required\n   * @param {Object} opts, optional\n   * @api public\n   */\n\n  geocode: function ( loc, cbk, opts ) {\n\n    if ( ! loc ) {\n        return cbk( new Error( \"Geocoder.geocode requires a location.\") );\n    }\n\n    return this.providerObj.geocode(this.providerOpts, loc, cbk, opts);\n\n  },\n\n  reverseGeocode: function ( lat, lng, cbk, opts ) {\n    if ( !lat || !lng ) {\n      return cbk( new Error( \"Geocoder.reverseGeocode requires a latitude and longitude.\" ) );\n    }\n\n    return this.providerObj.reverseGeocode(this.providerOpts, lat, lng, cbk, opts );\n\n  },\n\n  /**\n   * Return Geocoder version\n   *\n   * @api public\n   */\n\n  version: version\n\n};\n\n/**\n * Export\n */\n\nmodule.exports = new Geocoder();\n"]},"metadata":{},"sourceType":"script"}