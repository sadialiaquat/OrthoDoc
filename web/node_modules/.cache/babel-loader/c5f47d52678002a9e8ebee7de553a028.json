{"ast":null,"code":"var request = require(\"request\");\n\nvar _ = require('underscore');\n\nexports.geocode = function (providerOpts, loc, cbk, opts) {\n  var options = _.extend({\n    sensor: false,\n    address: loc\n  }, opts || {});\n\n  var uri = \"http\" + (options.key ? \"s\" : \"\") + \"://maps.googleapis.com/maps/api/geocode/json\";\n  request({\n    uri: uri,\n    qs: options\n  }, function (err, resp, body) {\n    if (err) return cbk(err);\n    var result;\n\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    }\n\n    cbk(null, result);\n  });\n};\n\nexports.reverseGeocode = function (providerOpts, lat, lng, cbk, opts) {\n  var options = _.extend({\n    sensor: false,\n    latlng: lat + ',' + lng\n  }, opts || {});\n\n  var uri = \"http\" + (options.key ? \"s\" : \"\") + \"://maps.googleapis.com/maps/api/geocode/json\";\n  request({\n    uri: uri,\n    qs: options\n  }, function (err, resp, body) {\n    if (err) return cbk(err);\n    var result;\n\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    }\n\n    cbk(null, result);\n  });\n};","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/node_modules/geocoder/providers/google.js"],"names":["request","require","_","exports","geocode","providerOpts","loc","cbk","opts","options","extend","sensor","address","uri","key","qs","err","resp","body","result","JSON","parse","reverseGeocode","lat","lng","latlng"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,YAAD,CAAf;;AAEAE,OAAO,CAACC,OAAR,GAAkB,UAAWC,YAAX,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAA0C;AAE1D,MAAIC,OAAO,GAAGP,CAAC,CAACQ,MAAF,CAAS;AAACC,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAEN;AAAzB,GAAT,EAAwCE,IAAI,IAAI,EAAhD,CAAd;;AACA,MAAIK,GAAG,GAAG,UAAWJ,OAAO,CAACK,GAAR,GAAc,GAAd,GAAoB,EAA/B,IAAsC,8CAAhD;AACAd,EAAAA,OAAO,CAAC;AACNa,IAAAA,GAAG,EAAEA,GADC;AAENE,IAAAA,EAAE,EAACN;AAFG,GAAD,EAGJ,UAASO,GAAT,EAAaC,IAAb,EAAkBC,IAAlB,EAAwB;AACzB,QAAIF,GAAJ,EAAS,OAAOT,GAAG,CAACS,GAAD,CAAV;AACT,QAAIG,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAT;AACD,KAFD,CAEE,OAAOF,GAAP,EAAY;AACZT,MAAAA,GAAG,CAACS,GAAD,CAAH;AACA;AACD;;AACDT,IAAAA,GAAG,CAAC,IAAD,EAAMY,MAAN,CAAH;AACD,GAbM,CAAP;AAcD,CAlBD;;AAoBAhB,OAAO,CAACmB,cAAR,GAAyB,UAAWjB,YAAX,EAAyBkB,GAAzB,EAA8BC,GAA9B,EAAmCjB,GAAnC,EAAwCC,IAAxC,EAA+C;AAEtE,MAAIC,OAAO,GAAGP,CAAC,CAACQ,MAAF,CAAS;AAACC,IAAAA,MAAM,EAAE,KAAT;AAAgBc,IAAAA,MAAM,EAAEF,GAAG,GAAG,GAAN,GAAYC;AAApC,GAAT,EAAmDhB,IAAI,IAAI,EAA3D,CAAd;;AACA,MAAIK,GAAG,GAAG,UAAWJ,OAAO,CAACK,GAAR,GAAc,GAAd,GAAoB,EAA/B,IAAsC,8CAAhD;AAEAd,EAAAA,OAAO,CAAC;AACNa,IAAAA,GAAG,EAACA,GADE;AAENE,IAAAA,EAAE,EAACN;AAFG,GAAD,EAGJ,UAASO,GAAT,EAAaC,IAAb,EAAkBC,IAAlB,EAAwB;AACzB,QAAIF,GAAJ,EAAS,OAAOT,GAAG,CAACS,GAAD,CAAV;AACT,QAAIG,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAT;AACD,KAFD,CAEE,OAAOF,GAAP,EAAY;AACZT,MAAAA,GAAG,CAACS,GAAD,CAAH;AACA;AACD;;AACDT,IAAAA,GAAG,CAAC,IAAD,EAAMY,MAAN,CAAH;AACD,GAbM,CAAP;AAeD,CApBD","sourcesContent":["var request = require(\"request\");\nvar _ = require('underscore');\n\nexports.geocode = function ( providerOpts, loc, cbk, opts ) {\n\n  var options = _.extend({sensor: false, address: loc}, opts || {});\n  var uri = \"http\" + ( options.key ? \"s\" : \"\" ) + \"://maps.googleapis.com/maps/api/geocode/json\"\n  request({\n    uri: uri,\n    qs:options\n  }, function(err,resp,body) {\n    if (err) return cbk(err);\n    var result;\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    }\n    cbk(null,result);\n  });\n};\n\nexports.reverseGeocode = function ( providerOpts, lat, lng, cbk, opts ) {\n\n  var options = _.extend({sensor: false, latlng: lat + ',' + lng}, opts || {});\n  var uri = \"http\" + ( options.key ? \"s\" : \"\" ) + \"://maps.googleapis.com/maps/api/geocode/json\"\n\n  request({\n    uri:uri,\n    qs:options\n  }, function(err,resp,body) {\n    if (err) return cbk(err);\n    var result;\n    try {\n      result = JSON.parse(body);\n    } catch (err) {\n      cbk(err);\n      return;\n    }\n    cbk(null,result);\n  });\n\n};\n"]},"metadata":{},"sourceType":"script"}