{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport './Paymentform.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"gray\",\n      color: \"white\",\n      fontWeight: 700,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"29px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"white\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nfunction PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: 2000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"Form-Group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-Row\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pay-button\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your appointment is booked!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }, this);\n}\n\n_s(PaymentForm, \"EMVTPBRU/bJmYZxDq7hcPwcWEvI=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react'   \r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\r\nimport axios from \"axios\"\r\nimport  './Paymentform.css';\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"gray\",\r\n\t\t\tcolor: \"white\",\r\n\t\t\tfontWeight: 700,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"29px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"white\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction PaymentForm(){\r\n    const [success, setSuccess ] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })  \r\n    \r\n    if(!error){\r\n        try{\r\n            const {id} = paymentMethod\r\n            const response = await axios.post(\"http://localhost:4000/payment\", {\r\n                amount: 2000,\r\n                id\r\n            })\r\n            if(response.data.success) {\r\n                console.log(\"Successful payment\")\r\n                setSuccess(true)\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(\"Error\", error)\r\n        }\r\n    }\r\n    else {\r\n        console.log(error.message)\r\n    }\r\n\r\n}\r\nreturn(\r\n<div>\r\n{!success ? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"Form-Group\">\r\n                <div className=\"Form-Row\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button className='pay-button'>Pay</button>\r\n        </form>\r\n        :\r\n       <div>\r\n           <h2>Your appointment is booked!!</h2>\r\n       </div> \r\n        }\r\n</div>\r\n\r\n)}\r\n\r\nexport default PaymentForm;"]},"metadata":{},"sourceType":"module"}