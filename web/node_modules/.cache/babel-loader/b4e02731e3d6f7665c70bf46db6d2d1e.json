{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\ViewProfileDoc.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DoctorSidebar from \"./DoctorSidebar\";\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { db, authentication } from '../firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewDoctorProfile() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [users, setUsers] = useState([]);\n  const [mail, setMail] = useState(location.state.id);\n  console.log(location.state.id);\n\n  const fetchData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"users\"));\n      querySnapshot.forEach(doc => {\n        if (mail === doc.data().email) {\n          setUsers(prev => [...prev, doc.data()]);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DoctorSidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"View Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), users.map((item, key) => {\n          var _item$displayName, _item$phoneNumber;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-patient-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Name : \", (_item$displayName = item.displayName) !== null && _item$displayName !== void 0 ? _item$displayName : item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email address: \", mail]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone Number: \", (_item$phoneNumber = item.phoneNumber) !== null && _item$phoneNumber !== void 0 ? _item$phoneNumber : item.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _authentication$curre;\n\n                return navigate('/doctorMessage', {\n                  state: {\n                    docid: (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email,\n                    userid: mail,\n                    current: \"doctor\"\n                  }\n                });\n              },\n              type: \"submit\",\n              className: \"c-patient-button\",\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"b-patient-button\",\n              children: \"Book Appointmnet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewDoctorProfile, \"7RnMXP7H+ezia8z1r1n/4MzZGEk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ViewDoctorProfile;\nexport default ViewDoctorProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDoctorProfile\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/ViewProfileDoc.js"],"names":["React","DoctorSidebar","useLocation","useState","useEffect","db","authentication","collection","getDocs","useNavigate","ViewDoctorProfile","navigate","location","users","setUsers","mail","setMail","state","id","console","log","fetchData","querySnapshot","forEach","doc","data","email","prev","err","map","item","key","displayName","name","phoneNumber","contact","docid","currentUser","userid","current"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAT,EAAaC,cAAb,QAAkC,oBAAlC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AACA,SAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACS,QAAQ,CAACK,KAAT,CAAeC,EAAhB,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACK,KAAT,CAAeC,EAA3B;;AACA,QAAMG,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMC,aAAa,GAAG,MAAMd,OAAO,CAACD,UAAU,CAACF,EAAD,EAAK,OAAL,CAAX,CAAnC;AACAiB,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3B,YAAIT,IAAI,KAAKS,GAAG,CAACC,IAAJ,GAAWC,KAAxB,EAA+B;AAC3BZ,UAAAA,QAAQ,CAAEa,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUH,GAAG,CAACC,IAAJ,EAAV,CAAX,CAAR;AACH;AACJ,OAJD;AAKH,KAPD,CAOE,OAAOG,GAAP,EAAY;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH;AACJ,GAXD;;AAYAxB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKR,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP;AAAA;;AAAA,8BAEC;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACI;AAAA,yDAAWD,IAAI,CAACE,WAAhB,iEAA+BF,IAAI,CAACG,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,4CAAmBlB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,gEAAkBe,IAAI,CAACI,WAAvB,iEAAsCJ,IAAI,CAACK,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAMI;AAAS,cAAA,OAAO,EAAE;AAAA;;AAAA,uBAAMxB,QAAQ,CAAC,gBAAD,EAAmB;AAAEM,kBAAAA,KAAK,EAAE;AAAEmB,oBAAAA,KAAK,2BAAC9B,cAAc,CAAC+B,WAAhB,0DAAC,sBAA4BX,KAApC;AAA4CY,oBAAAA,MAAM,EAACvB,IAAnD;AAAyDwB,oBAAAA,OAAO,EAAC;AAAjE;AAAT,iBAAnB,CAAd;AAAA,eAAlB;AAA4I,cAAA,IAAI,EAAC,QAAjJ;AAA0J,cAAA,SAAS,EAAC,kBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eASI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA,SAAV,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmCH;;GAxDQ7B,iB;UACYD,W,EACAP,W;;;KAFZQ,iB;AAyDT,eAAeA,iBAAf","sourcesContent":["import React from 'react';\r\nimport DoctorSidebar from \"./DoctorSidebar\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { db ,authentication} from '../firebase-config';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction ViewDoctorProfile() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [users, setUsers] = useState([]);\r\n    const [mail, setMail] = useState(location.state.id);\r\n    console.log(location.state.id);\r\n    const fetchData = async () => {\r\n        try {\r\n            const querySnapshot = await getDocs(collection(db, \"users\"));\r\n            querySnapshot.forEach((doc) => {\r\n                if (mail === doc.data().email) {\r\n                    setUsers((prev) => [...prev, doc.data()]);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <DoctorSidebar>\r\n                <div className=\"main-main\">  \r\n                    <div className=\"search-heading\">View Profile</div>\r\n                    {users.map((item, key) => (\r\n                        \r\n                                <div className='view-patient-main'>\r\n                                    <p>Name : {item.displayName ?? item.name}</p>\r\n                                    <p>Email address: {mail}</p>\r\n                                    <p>Phone Number: {item.phoneNumber ?? item.contact}</p>\r\n                                  \r\n\r\n                                    <button  onClick={() => navigate('/doctorMessage', { state: { docid:authentication.currentUser?.email , userid:mail ,current:\"doctor\"} })}  type=\"submit\" className=\"c-patient-button\">\r\n                                        Chat\r\n                                    </button>\r\n                                    <button type=\"submit\" className=\"b-patient-button\">\r\n                                        Book Appointmnet\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                            \r\n                        \r\n                    ))}\r\n\r\n\r\n                    \r\n\r\n                </div>\r\n            </DoctorSidebar>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default ViewDoctorProfile; "]},"metadata":{},"sourceType":"module"}