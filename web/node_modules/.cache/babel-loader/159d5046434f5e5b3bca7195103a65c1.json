{"ast":null,"code":"var _jsxFileName = \"D:\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport { collection, getDocs, orderBy } from \"firebase/firestore\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { query, where } from \"firebase/firestore\";\nimport { useLocation } from 'react-router-dom';\nimport { authentication, db } from '../firebase-config';\nimport { useState, useEffect } from \"react\";\nimport Messenger from \"./Messenger\";\nimport { Link } from \"react-router-dom\";\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\nimport { MdSend } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Message() {\n  _s();\n\n  const location = useLocation();\n  const [messages, setMessages] = useState([]);\n  const [temp, setTemp] = useState(\"\");\n  const ref = useRef(null);\n  let messageArraay = [];\n\n  const querySnapshot = async () => {\n    console.log(\"State\", location.state.docid);\n    const col = collection(db, \"chatroom\");\n    const q = query(col, where(\"chatId\", \"==\", location.state.userid + location.state.docid), orderBy(\"createdAt\", \"asc\"));\n    const snap = await getDocs(q);\n    snap.forEach(doc => {\n      const new_obj = { ...doc.data()\n      };\n      messageArraay.push(new_obj);\n    });\n    console.log(\"message array\", messageArraay);\n    setMessages(messageArraay);\n    console.log(\"REVERSE\", messageArraay.reverse());\n  };\n\n  useEffect(() => {\n    querySnapshot();\n  }, []);\n\n  const onSend = () => {\n    const msg = messages[0];\n    const mymsg = { ...msg,\n      sentBy: location.state.current == \"doctor\" ? location.state.docid : location.state.userid,\n      sentTo: location.state.current == \"doctor\" ? location.state.userid : location.state.docid,\n      createdAt: new Date(),\n      chatId: location.state.userid + location.state.docid,\n      text: temp\n    };\n    setMessages(previousMessages => [...previousMessages, mymsg]);\n    const docid = location.state.docid > location.state.userid ? location.state.userid + \"-\" + location.state.docid : location.state.docid + \"-\" + location.state.userid;\n    const myDoc = doc(db, \"chatroom\", new Date().toString());\n    setDoc(myDoc, mymsg).then(() => {\n      console.log(\"Document written with ID: \", myDoc.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error.message);\n    });\n  };\n\n  console.log(\"Doc id :\", location.state.docid);\n  console.log(\"User id\", location.state.userid);\n  console.log(\"temppp\", messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages.map((item, uid) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `msg ${item.sentBy == authentication.currentUser.email ? 'sent' : 'received'}`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"P\",\n                  children: [item.text, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"chatMessageInput\",\n              onChange: e => setTemp(e.target.value),\n              placeholder: \"Write something..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatSubmitButton\",\n              onClick: onSend(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sendicon\",\n                children: [\"  \", /*#__PURE__*/_jsxDEV(MdSend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backtohome\",\n        children: /*#__PURE__*/_jsxDEV(FaArrowCircleLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Message, \"0r/UASIMRMu4scasvvMabiSL2FU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["D:/OrthoDoc/web/src/Pages/Message.js"],"names":["collection","getDocs","orderBy","doc","setDoc","query","where","useLocation","authentication","db","useState","useEffect","Messenger","Link","FaArrowCircleLeft","MdSend","Message","location","messages","setMessages","temp","setTemp","ref","useRef","messageArraay","querySnapshot","console","log","state","docid","col","q","userid","snap","forEach","new_obj","data","push","reverse","onSend","msg","mymsg","sentBy","current","sentTo","createdAt","Date","chatId","text","previousMessages","myDoc","toString","then","id","catch","error","message","map","item","uid","currentUser","email","e","target","value"],"mappings":"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","sourcesContent":["import { collection, getDocs, orderBy } from \"firebase/firestore\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { query, where } from \"firebase/firestore\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { authentication, db } from '../firebase-config';\r\nimport { useState, useEffect} from \"react\";\r\nimport Messenger from \"./Messenger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { MdSend } from \"react-icons/md\";\r\nfunction Message() {\r\n  const location = useLocation();\r\n  const [messages, setMessages] = useState([]);\r\n  const [temp, setTemp] = useState(\"\");\r\n\r\n  const ref = useRef(null);\r\n  let messageArraay = [];\r\n  const querySnapshot = async () => {\r\n    console.log(\"State\", location.state.docid);\r\n    const col = collection(db, \"chatroom\");\r\n    const q = query(\r\n      col,\r\n      where(\r\n        \"chatId\",\r\n        \"==\",\r\n        location.state.userid + location.state.docid\r\n      ), orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    const snap = await getDocs(q);\r\n   \r\n    snap.forEach((doc) => {\r\n      const new_obj = {\r\n        ...doc.data(),\r\n      };\r\n\r\n      messageArraay.push(new_obj);\r\n    });\r\n    console.log(\"message array\", messageArraay);\r\n    setMessages(messageArraay);\r\n    console.log(\"REVERSE\",messageArraay.reverse())\r\n  };\r\n  useEffect(() => {\r\n    querySnapshot();\r\n  }, []);\r\n  const onSend = () => {\r\n    const msg = messages[0];\r\n    const mymsg = {\r\n      ...msg,\r\n      sentBy:\r\n        location.state.current == \"doctor\"\r\n          ? location.state.docid\r\n          : location.state.userid,\r\n      sentTo:\r\n        location.state.current == \"doctor\"\r\n          ? location.state.userid\r\n          : location.state.docid,\r\n\r\n      createdAt: new Date(),\r\n      chatId:\r\n        location.state.userid + location.state.docid,\r\n      text:temp,\r\n    };\r\n\r\n    setMessages((previousMessages) => [...previousMessages, mymsg]\r\n    );\r\n    \r\n    const docid =\r\n      location.state.docid > location.state.userid\r\n        ? location.state.userid +\r\n        \"-\" +\r\n        location.state.docid\r\n        : location.state.docid +\r\n        \"-\" +\r\n        location.state.userid;\r\n\r\n    const myDoc = doc(db, \"chatroom\", new Date().toString());\r\n    setDoc(myDoc, mymsg)\r\n      .then(() => {\r\n        console.log(\"Document written with ID: \", myDoc.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error.message);\r\n      });\r\n  };\r\n\r\n\r\n  console.log(\"Doc id :\", location.state.docid)\r\n  console.log(\"User id\", location.state.userid)\r\n  console.log(\"temppp\", messages);\r\n  return (\r\n    <>\r\n\r\n      <div className=\"messenger\">\r\n    \r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n\r\n              <div className='chatBoxTop'>\r\n              {messages.map((item, uid) => (\r\n                 <div className=\"messages\">\r\n                  \r\n                <div className={`msg ${item.sentBy== authentication.currentUser.email? 'sent' : 'received'}`}>\r\n                  <p className=\"P\">{item.text} </p>\r\n                </div></div>\r\n              ))}\r\n              </div>\r\n             \r\n              <div className=\"chatBoxBottom\">\r\n                <input className=\"chatMessageInput\"  onChange={(e) => setTemp(e.target.value)}  placeholder=\"Write something..\"></input>\r\n                <button className=\"chatSubmitButton\" onClick={onSend()}>\r\n                  <div className='sendicon'>  <MdSend /></div>\r\n                </button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <Link to='/home'>\r\n        <div className='backtohome'><FaArrowCircleLeft /></div></Link>\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n  );\r\n\r\n}\r\nexport default Message; "]},"metadata":{},"sourceType":"module"}