{"ast":null,"code":"//     Underscore.js 1.3.3\n//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore is freely distributable under the MIT license.\n//     Portions of Underscore are inspired or borrowed from Prototype,\n//     Oliver Steele's Functional, and John Resig's Micro-Templating.\n//     For all details and documentation:\n//     http://documentcloud.github.com/underscore\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Establish the object that gets returned to break out of a loop iteration.\n\n  var breaker = {}; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype,\n      FuncProto = Function.prototype; // Create quick reference variables for speed access to core prototypes.\n\n  var slice = ArrayProto.slice,\n      unshift = ArrayProto.unshift,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeForEach = ArrayProto.forEach,\n      nativeMap = ArrayProto.map,\n      nativeReduce = ArrayProto.reduce,\n      nativeReduceRight = ArrayProto.reduceRight,\n      nativeFilter = ArrayProto.filter,\n      nativeEvery = ArrayProto.every,\n      nativeSome = ArrayProto.some,\n      nativeIndexOf = ArrayProto.indexOf,\n      nativeLastIndexOf = ArrayProto.lastIndexOf,\n      nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeBind = FuncProto.bind; // Create a safe reference to the Underscore object for use below.\n\n  var _ = function (obj) {\n    return new wrapper(obj);\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root['_'] = _;\n  } // Current version.\n\n\n  _.VERSION = '1.3.3'; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n\n  var each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null) return;\n\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  }; // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n\n\n  _.map = _.collect = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function (value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    if (obj.length === +obj.length) results.length = obj.length;\n    return results;\n  }; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n\n\n  _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n\n    each(obj, function (value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n    return memo;\n  }; // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n\n\n  _.reduceRight = _.foldr = function (obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n\n    var reversed = _.toArray(obj).reverse();\n\n    if (context && !initial) iterator = _.bind(iterator, context);\n    return initial ? _.reduce(reversed, iterator, memo, context) : _.reduce(reversed, iterator);\n  }; // Return the first value which passes a truth test. Aliased as `detect`.\n\n\n  _.find = _.detect = function (obj, iterator, context) {\n    var result;\n    any(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  }; // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function (value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    each(obj, function (value, index, list) {\n      if (!iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  }; // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, iterator, context) {\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function (value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n\n\n  var any = _.some = _.any = function (obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function (value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  }; // Determine if a given value is included in the array or object using `===`.\n  // Aliased as `contains`.\n\n\n  _.include = _.contains = function (obj, target) {\n    var found = false;\n    if (obj == null) return found;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    found = any(obj, function (value) {\n      return value === target;\n    });\n    return found;\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = function (obj, method) {\n    var args = slice.call(arguments, 2);\n    return _.map(obj, function (value) {\n      return (_.isFunction(method) ? method || value : value[method]).apply(value, args);\n    });\n  }; // Convenience version of a common use case of `map`: fetching a property.\n\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, function (value) {\n      return value[key];\n    });\n  }; // Return the maximum element or (element-based computation).\n\n\n  _.max = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.max.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {\n      computed: -Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.min.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {\n      computed: Infinity\n    };\n    each(obj, function (value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {\n        value: value,\n        computed: computed\n      });\n    });\n    return result.value;\n  }; // Shuffle an array.\n\n\n  _.shuffle = function (obj) {\n    var shuffled = [],\n        rand;\n    each(obj, function (value, index, list) {\n      rand = Math.floor(Math.random() * (index + 1));\n      shuffled[index] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  }; // Sort the object's values by a criterion produced by an iterator.\n\n\n  _.sortBy = function (obj, val, context) {\n    var iterator = _.isFunction(val) ? val : function (obj) {\n      return obj[val];\n    };\n    return _.pluck(_.map(obj, function (value, index, list) {\n      return {\n        value: value,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria,\n          b = right.criteria;\n      if (a === void 0) return 1;\n      if (b === void 0) return -1;\n      return a < b ? -1 : a > b ? 1 : 0;\n    }), 'value');\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = function (obj, val) {\n    var result = {};\n    var iterator = _.isFunction(val) ? val : function (obj) {\n      return obj[val];\n    };\n    each(obj, function (value, index) {\n      var key = iterator(value, index);\n      (result[key] || (result[key] = [])).push(value);\n    });\n    return result;\n  }; // Use a comparator function to figure out at what index an object should\n  // be inserted so as to maintain order. Uses binary search.\n\n\n  _.sortedIndex = function (array, obj, iterator) {\n    iterator || (iterator = _.identity);\n    var low = 0,\n        high = array.length;\n\n    while (low < high) {\n      var mid = low + high >> 1;\n      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;\n    }\n\n    return low;\n  }; // Safely convert anything iterable into a real, live array.\n\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isArguments(obj)) return slice.call(obj);\n    if (obj.toArray && _.isFunction(obj.toArray)) return obj.toArray();\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    return _.isArray(obj) ? obj.length : _.keys(obj).length;\n  }; // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    return n != null && !guard ? slice.call(array, 0, n) : array[0];\n  }; // Returns everything but the last entry of the array. Especcialy useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n\n\n  _.last = function (array, n, guard) {\n    if (n != null && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  }; // Returns everything but the first entry of the array. Aliased as `tail`.\n  // Especially useful on the arguments object. Passing an **index** will return\n  // the rest of the values in the array from that index onward. The **guard**\n  // check allows it to work with `_.map`.\n\n\n  _.rest = _.tail = function (array, index, guard) {\n    return slice.call(array, index == null || guard ? 1 : index);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, function (value) {\n      return !!value;\n    });\n  }; // Return a completely flattened version of an array.\n\n\n  _.flatten = function (array, shallow) {\n    return _.reduce(array, function (memo, value) {\n      if (_.isArray(value)) return memo.concat(shallow ? value : _.flatten(value));\n      memo[memo.length] = value;\n      return memo;\n    }, []);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = function (array) {\n    return _.difference(array, slice.call(arguments, 1));\n  }; // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n\n\n  _.uniq = _.unique = function (array, isSorted, iterator) {\n    var initial = iterator ? _.map(array, iterator) : array;\n    var results = []; // The `isSorted` flag is irrelevant if the array only contains two elements.\n\n    if (array.length < 3) isSorted = true;\n\n    _.reduce(initial, function (memo, value, index) {\n      if (isSorted ? _.last(memo) !== value || !memo.length : !_.include(memo, value)) {\n        memo.push(value);\n        results.push(array[index]);\n      }\n\n      return memo;\n    }, []);\n\n    return results;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = function () {\n    return _.uniq(_.flatten(arguments, true));\n  }; // Produce an array that contains every item shared between all the\n  // passed-in arrays. (Aliased as \"intersect\" for back-compat.)\n\n\n  _.intersection = _.intersect = function (array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function (item) {\n      return _.every(rest, function (other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = function (array) {\n    var rest = _.flatten(slice.call(arguments, 1), true);\n\n    return _.filter(array, function (value) {\n      return !_.include(rest, value);\n    });\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = function () {\n    var args = slice.call(arguments);\n\n    var length = _.max(_.pluck(args, 'length'));\n\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) results[i] = _.pluck(args, \"\" + i);\n\n    return results;\n  }; // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = function (array, item, isSorted) {\n    if (array == null) return -1;\n    var i, l;\n\n    if (isSorted) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);\n\n    for (i = 0, l = array.length; i < l; i++) if (i in array && array[i] === item) return i;\n\n    return -1;\n  }; // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n\n\n  _.lastIndexOf = function (array, item) {\n    if (array == null) return -1;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);\n    var i = array.length;\n\n    while (i--) if (i in array && array[i] === item) return i;\n\n    return -1;\n  }; // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n\n  _.range = function (start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    step = arguments[2] || 1;\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while (idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Reusable constructor function for prototype setting.\n\n\n  var ctor = function () {}; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Binding with arguments is also known as `curry`.\n  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.\n  // We check for `func.bind` first, to fail fast when `func` is undefined.\n\n\n  _.bind = function bind(func, context) {\n    var bound, args;\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError();\n    args = slice.call(arguments, 2);\n    return bound = function () {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor();\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  }; // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n\n\n  _.bindAll = function (obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length == 0) funcs = _.functions(obj);\n    each(funcs, function (f) {\n      obj[f] = _.bind(obj[f], obj);\n    });\n    return obj;\n  }; // Memoize an expensive function by storing its results.\n\n\n  _.memoize = function (func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function () {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);\n    };\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = function (func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }; // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n\n  _.defer = function (func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  }; // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n\n\n  _.throttle = function (func, wait) {\n    var context, args, timeout, throttling, more, result;\n\n    var whenDone = _.debounce(function () {\n      more = throttling = false;\n    }, wait);\n\n    return function () {\n      context = this;\n      args = arguments;\n\n      var later = function () {\n        timeout = null;\n        if (more) func.apply(context, args);\n        whenDone();\n      };\n\n      if (!timeout) timeout = setTimeout(later, wait);\n\n      if (throttling) {\n        more = true;\n      } else {\n        result = func.apply(context, args);\n      }\n\n      whenDone();\n      throttling = true;\n      return result;\n    };\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n\n      if (immediate && !timeout) func.apply(context, args);\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = function (func) {\n    var ran = false,\n        memo;\n    return function () {\n      if (ran) return memo;\n      ran = true;\n      return memo = func.apply(this, arguments);\n    };\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return function () {\n      var args = [func].concat(slice.call(arguments, 0));\n      return wrapper.apply(this, args);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var funcs = arguments;\n    return function () {\n      var args = arguments;\n\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n\n      return args[0];\n    };\n  }; // Returns a function that will only be executed after being called N times.\n\n\n  _.after = function (times, func) {\n    if (times <= 0) return func();\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Object Functions\n  // ----------------\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\n\n  _.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    return _.map(obj, _.identity);\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      for (var prop in source) {\n        obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = function (obj) {\n    var result = {};\n    each(_.flatten(slice.call(arguments, 1)), function (key) {\n      if (key in obj) result[key] = obj[key];\n    });\n    return result;\n  }; // Fill in a given object with default properties.\n\n\n  _.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n      for (var prop in source) {\n        if (obj[prop] == null) obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Internal recursive comparison function.\n\n\n  function eq(a, b, stack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b; // A strict comparison is necessary because `null == undefined`.\n\n    if (a == null || b == null) return a === b; // Unwrap any wrapped objects.\n\n    if (a._chain) a = a._wrapped;\n    if (b._chain) b = b._wrapped; // Invoke a custom `isEqual` method if one is provided.\n\n    if (a.isEqual && _.isFunction(a.isEqual)) return a.isEqual(b);\n    if (b.isEqual && _.isFunction(b.isEqual)) return b.isEqual(a); // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n\n      case '[object RegExp]':\n        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n    }\n\n    if (typeof a != 'object' || typeof b != 'object') return false; // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    var length = stack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (stack[length] == a) return true;\n    } // Add the first object to the stack of traversed objects.\n\n\n    stack.push(a);\n    var size = 0,\n        result = true; // Recursively compare objects and arrays.\n\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          // Ensure commutative equality for sparse arrays.\n          if (!(result = size in a == size in b && eq(a[size], b[size], stack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent.\n      if ('constructor' in a != 'constructor' in b || a.constructor != b.constructor) return false; // Deep compare objects.\n\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++; // Deep compare each member.\n\n          if (!(result = _.has(b, key) && eq(a[key], b[key], stack))) break;\n        }\n      } // Ensure that both objects contain the same number of properties.\n\n\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !size--) break;\n        }\n\n        result = !size;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    stack.pop();\n    return result;\n  } // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b, []);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n\n    for (var key in obj) if (_.has(obj, key)) return false;\n\n    return true;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType == 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) == '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    return obj === Object(obj);\n  }; // Is a given variable an arguments object?\n\n\n  _.isArguments = function (obj) {\n    return toString.call(obj) == '[object Arguments]';\n  };\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  } // Is a given value a function?\n\n\n  _.isFunction = function (obj) {\n    return toString.call(obj) == '[object Function]';\n  }; // Is a given value a string?\n\n\n  _.isString = function (obj) {\n    return toString.call(obj) == '[object String]';\n  }; // Is a given value a number?\n\n\n  _.isNumber = function (obj) {\n    return toString.call(obj) == '[object Number]';\n  }; // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return _.isNumber(obj) && isFinite(obj);\n  }; // Is the given value `NaN`?\n\n\n  _.isNaN = function (obj) {\n    // `NaN` is the only value for which `===` is not reflexive.\n    return obj !== obj;\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  }; // Is a given value a date?\n\n\n  _.isDate = function (obj) {\n    return toString.call(obj) == '[object Date]';\n  }; // Is the given value a regular expression?\n\n\n  _.isRegExp = function (obj) {\n    return toString.call(obj) == '[object RegExp]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Has own property?\n\n\n  _.has = function (obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iterators.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iterator, context) {\n    for (var i = 0; i < n; i++) iterator.call(context, i);\n  }; // Escape a string for HTML interpolation.\n\n\n  _.escape = function (string) {\n    return ('' + string).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\\//g, '&#x2F;');\n  }; // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n\n\n  _.result = function (object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  }; // Add your own custom functions to the Underscore object, ensuring that\n  // they're correctly added to the OOP wrapper as well.\n\n\n  _.mixin = function (obj) {\n    each(_.functions(obj), function (name) {\n      addToWrapper(name, _[name] = obj[name]);\n    });\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = idCounter++;\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /.^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    'r': '\\r',\n    'n': '\\n',\n    't': '\\t',\n    'u2028': '\\u2028',\n    'u2029': '\\u2029'\n  };\n\n  for (var p in escapes) escapes[escapes[p]] = p;\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n  var unescaper = /\\\\(\\\\|'|r|n|t|u2028|u2029)/g; // Within an interpolation, evaluation, or escaping, remove HTML escaping\n  // that had been previously added.\n\n  var unescape = function (code) {\n    return code.replace(unescaper, function (match, escape) {\n      return escapes[escape];\n    });\n  }; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n\n\n  _.template = function (text, data, settings) {\n    settings = _.defaults(settings || {}, _.templateSettings); // Compile the template source, taking care to escape characters that\n    // cannot be included in a string literal and then unescape them in code\n    // blocks.\n\n    var source = \"__p+='\" + text.replace(escaper, function (match) {\n      return '\\\\' + escapes[match];\n    }).replace(settings.escape || noMatch, function (match, code) {\n      return \"'+\\n_.escape(\" + unescape(code) + \")+\\n'\";\n    }).replace(settings.interpolate || noMatch, function (match, code) {\n      return \"'+\\n(\" + unescape(code) + \")+\\n'\";\n    }).replace(settings.evaluate || noMatch, function (match, code) {\n      return \"';\\n\" + unescape(code) + \"\\n;__p+='\";\n    }) + \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __p='';\" + \"var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n\" + source + \"return __p;\\n\";\n    var render = new Function(settings.variable || 'obj', '_', source);\n    if (data) return render(data, _);\n\n    var template = function (data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled function source as a convenience for build time\n    // precompilation.\n\n\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function, which will delegate to the wrapper.\n\n\n  _.chain = function (obj) {\n    return _(obj).chain();\n  }; // The OOP Wrapper\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n\n  var wrapper = function (obj) {\n    this._wrapped = obj;\n  }; // Expose `wrapper.prototype` as `_.prototype`\n\n\n  _.prototype = wrapper.prototype; // Helper function to continue chaining intermediate results.\n\n  var result = function (obj, chain) {\n    return chain ? _(obj).chain() : obj;\n  }; // A method to easily add functions to the OOP wrapper.\n\n\n  var addToWrapper = function (name, func) {\n    wrapper.prototype[name] = function () {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    };\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    wrapper.prototype[name] = function () {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n  each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    wrapper.prototype[name] = function () {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    };\n  }); // Start chaining a wrapped Underscore object.\n\n  wrapper.prototype.chain = function () {\n    this._chain = true;\n    return this;\n  }; // Extracts the result from a wrapped and chained object.\n\n\n  wrapper.prototype.value = function () {\n    return this._wrapped;\n  };\n}).call(this);","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/node_modules/underscore/underscore.js"],"names":["root","previousUnderscore","_","breaker","ArrayProto","Array","prototype","ObjProto","Object","FuncProto","Function","slice","unshift","toString","hasOwnProperty","nativeForEach","forEach","nativeMap","map","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","filter","nativeEvery","every","nativeSome","some","nativeIndexOf","indexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","isArray","nativeKeys","keys","nativeBind","bind","obj","wrapper","exports","module","VERSION","each","iterator","context","length","i","l","call","key","has","collect","results","value","index","list","foldl","inject","memo","initial","arguments","TypeError","foldr","reversed","toArray","reverse","find","detect","result","any","select","reject","all","identity","include","contains","target","found","invoke","method","args","isFunction","apply","pluck","max","Math","isEmpty","Infinity","computed","min","shuffle","shuffled","rand","floor","random","sortBy","val","criteria","sort","left","right","a","b","groupBy","push","sortedIndex","array","low","high","mid","isArguments","values","size","first","head","take","n","guard","last","rest","tail","compact","flatten","shallow","concat","without","difference","uniq","unique","isSorted","union","intersection","intersect","item","other","zip","range","start","stop","step","len","ceil","idx","ctor","func","bound","self","bindAll","funcs","functions","f","memoize","hasher","delay","wait","setTimeout","defer","throttle","timeout","throttling","more","whenDone","debounce","later","immediate","clearTimeout","once","ran","wrap","compose","after","times","methods","names","extend","source","prop","pick","defaults","clone","isObject","tap","interceptor","eq","stack","_chain","_wrapped","isEqual","className","String","global","multiline","ignoreCase","constructor","pop","isString","isElement","nodeType","isNumber","isFinite","isNaN","isBoolean","isDate","isRegExp","isNull","isUndefined","noConflict","escape","string","replace","object","property","mixin","name","addToWrapper","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","p","escaper","unescaper","unescape","code","match","template","text","data","settings","variable","render","chain","wrapped"],"mappings":"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","sourcesContent":["//     Underscore.js 1.3.3\n//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore is freely distributable under the MIT license.\n//     Portions of Underscore are inspired or borrowed from Prototype,\n//     Oliver Steele's Functional, and John Resig's Micro-Templating.\n//     For all details and documentation:\n//     http://documentcloud.github.com/underscore\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var slice            = ArrayProto.slice,\n      unshift          = ArrayProto.unshift,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) { return new wrapper(obj); };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root['_'] = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.3.3';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    if (obj.length === +obj.length) results.length = obj.length;\n    return results;\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError('Reduce of empty array with no initial value');\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var reversed = _.toArray(obj).reverse();\n    if (context && !initial) iterator = _.bind(iterator, context);\n    return initial ? _.reduce(reversed, iterator, memo, context) : _.reduce(reversed, iterator);\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    each(obj, function(value, index, list) {\n      if (!iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if a given value is included in the array or object using `===`.\n  // Aliased as `contains`.\n  _.include = _.contains = function(obj, target) {\n    var found = false;\n    if (obj == null) return found;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    found = any(obj, function(value) {\n      return value === target;\n    });\n    return found;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    return _.map(obj, function(value) {\n      return (_.isFunction(method) ? method || value : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Return the maximum element or (element-based computation).\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.max.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.min.apply(Math, obj);\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var shuffled = [], rand;\n    each(obj, function(value, index, list) {\n      rand = Math.floor(Math.random() * (index + 1));\n      shuffled[index] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, val, context) {\n    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria, b = right.criteria;\n      if (a === void 0) return 1;\n      if (b === void 0) return -1;\n      return a < b ? -1 : a > b ? 1 : 0;\n    }), 'value');\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, val) {\n    var result = {};\n    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };\n    each(obj, function(value, index) {\n      var key = iterator(value, index);\n      (result[key] || (result[key] = [])).push(value);\n    });\n    return result;\n  };\n\n  // Use a comparator function to figure out at what index an object should\n  // be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator) {\n    iterator || (iterator = _.identity);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >> 1;\n      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj)                                     return [];\n    if (_.isArray(obj))                           return slice.call(obj);\n    if (_.isArguments(obj))                       return slice.call(obj);\n    if (obj.toArray && _.isFunction(obj.toArray)) return obj.toArray();\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    return _.isArray(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especcialy useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail`.\n  // Especially useful on the arguments object. Passing an **index** will return\n  // the rest of the values in the array from that index onward. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = function(array, index, guard) {\n    return slice.call(array, (index == null) || guard ? 1 : index);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, function(value){ return !!value; });\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return _.reduce(array, function(memo, value) {\n      if (_.isArray(value)) return memo.concat(shallow ? value : _.flatten(value));\n      memo[memo.length] = value;\n      return memo;\n    }, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator) {\n    var initial = iterator ? _.map(array, iterator) : array;\n    var results = [];\n    // The `isSorted` flag is irrelevant if the array only contains two elements.\n    if (array.length < 3) isSorted = true;\n    _.reduce(initial, function (memo, value, index) {\n      if (isSorted ? _.last(memo) !== value || !memo.length : !_.include(memo, value)) {\n        memo.push(value);\n        results.push(array[index]);\n      }\n      return memo;\n    }, []);\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(_.flatten(arguments, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays. (Aliased as \"intersect\" for back-compat.)\n  _.intersection = _.intersect = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = _.flatten(slice.call(arguments, 1), true);\n    return _.filter(array, function(value){ return !_.include(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) results[i] = _.pluck(args, \"\" + i);\n    return results;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i, l;\n    if (isSorted) {\n      i = _.sortedIndex(array, item);\n      return array[i] === item ? i : -1;\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);\n    for (i = 0, l = array.length; i < l; i++) if (i in array && array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item) {\n    if (array == null) return -1;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);\n    var i = array.length;\n    while (i--) if (i in array && array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Binding with arguments is also known as `curry`.\n  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.\n  // We check for `func.bind` first, to fail fast when `func` is undefined.\n  _.bind = function bind(func, context) {\n    var bound, args;\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError;\n    args = slice.call(arguments, 2);\n    return bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length == 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, throttling, more, result;\n    var whenDone = _.debounce(function(){ more = throttling = false; }, wait);\n    return function() {\n      context = this; args = arguments;\n      var later = function() {\n        timeout = null;\n        if (more) func.apply(context, args);\n        whenDone();\n      };\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (throttling) {\n        more = true;\n      } else {\n        result = func.apply(context, args);\n      }\n      whenDone();\n      throttling = true;\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      if (immediate && !timeout) func.apply(context, args);\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      return memo = func.apply(this, arguments);\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func].concat(slice.call(arguments, 0));\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) { return func.apply(this, arguments); }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    return _.map(obj, _.identity);\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var result = {};\n    each(_.flatten(slice.call(arguments, 1)), function(key) {\n      if (key in obj) result[key] = obj[key];\n    });\n    return result;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      for (var prop in source) {\n        if (obj[prop] == null) obj[prop] = source[prop];\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function.\n  function eq(a, b, stack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a._chain) a = a._wrapped;\n    if (b._chain) b = b._wrapped;\n    // Invoke a custom `isEqual` method if one is provided.\n    if (a.isEqual && _.isFunction(a.isEqual)) return a.isEqual(b);\n    if (b.isEqual && _.isFunction(b.isEqual)) return b.isEqual(a);\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = stack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (stack[length] == a) return true;\n    }\n    // Add the first object to the stack of traversed objects.\n    stack.push(a);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          // Ensure commutative equality for sparse arrays.\n          if (!(result = size in a == size in b && eq(a[size], b[size], stack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent.\n      if ('constructor' in a != 'constructor' in b || a.constructor != b.constructor) return false;\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], stack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    stack.pop();\n    return result;\n  }\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType == 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Is a given variable an arguments object?\n  _.isArguments = function(obj) {\n    return toString.call(obj) == '[object Arguments]';\n  };\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Is a given value a function?\n  _.isFunction = function(obj) {\n    return toString.call(obj) == '[object Function]';\n  };\n\n  // Is a given value a string?\n  _.isString = function(obj) {\n    return toString.call(obj) == '[object String]';\n  };\n\n  // Is a given value a number?\n  _.isNumber = function(obj) {\n    return toString.call(obj) == '[object Number]';\n  };\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return _.isNumber(obj) && isFinite(obj);\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    // `NaN` is the only value for which `===` is not reflexive.\n    return obj !== obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value a date?\n  _.isDate = function(obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n\n  // Is the given value a regular expression?\n  _.isRegExp = function(obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Has own property?\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function (n, iterator, context) {\n    for (var i = 0; i < n; i++) iterator.call(context, i);\n  };\n\n  // Escape a string for HTML interpolation.\n  _.escape = function(string) {\n    return (''+string).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\\//g,'&#x2F;');\n  };\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object, ensuring that\n  // they're correctly added to the OOP wrapper as well.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      addToWrapper(name, _[name] = obj[name]);\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = idCounter++;\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /.^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    'r': '\\r',\n    'n': '\\n',\n    't': '\\t',\n    'u2028': '\\u2028',\n    'u2029': '\\u2029'\n  };\n\n  for (var p in escapes) escapes[escapes[p]] = p;\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n  var unescaper = /\\\\(\\\\|'|r|n|t|u2028|u2029)/g;\n\n  // Within an interpolation, evaluation, or escaping, remove HTML escaping\n  // that had been previously added.\n  var unescape = function(code) {\n    return code.replace(unescaper, function(match, escape) {\n      return escapes[escape];\n    });\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    settings = _.defaults(settings || {}, _.templateSettings);\n\n    // Compile the template source, taking care to escape characters that\n    // cannot be included in a string literal and then unescape them in code\n    // blocks.\n    var source = \"__p+='\" + text\n      .replace(escaper, function(match) {\n        return '\\\\' + escapes[match];\n      })\n      .replace(settings.escape || noMatch, function(match, code) {\n        return \"'+\\n_.escape(\" + unescape(code) + \")+\\n'\";\n      })\n      .replace(settings.interpolate || noMatch, function(match, code) {\n        return \"'+\\n(\" + unescape(code) + \")+\\n'\";\n      })\n      .replace(settings.evaluate || noMatch, function(match, code) {\n        return \"';\\n\" + unescape(code) + \"\\n;__p+='\";\n      }) + \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __p='';\" +\n      \"var print=function(){__p+=Array.prototype.join.call(arguments, '')};\\n\" +\n      source + \"return __p;\\n\";\n\n    var render = new Function(settings.variable || 'obj', '_', source);\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for build time\n    // precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' +\n      source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // The OOP Wrapper\n  // ---------------\n\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  var wrapper = function(obj) { this._wrapped = obj; };\n\n  // Expose `wrapper.prototype` as `_.prototype`\n  _.prototype = wrapper.prototype;\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj, chain) {\n    return chain ? _(obj).chain() : obj;\n  };\n\n  // A method to easily add functions to the OOP wrapper.\n  var addToWrapper = function(name, func) {\n    wrapper.prototype[name] = function() {\n      var args = slice.call(arguments);\n      unshift.call(args, this._wrapped);\n      return result(func.apply(_, args), this._chain);\n    };\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    wrapper.prototype[name] = function() {\n      var wrapped = this._wrapped;\n      method.apply(wrapped, arguments);\n      var length = wrapped.length;\n      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];\n      return result(wrapped, this._chain);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    wrapper.prototype[name] = function() {\n      return result(method.apply(this._wrapped, arguments), this._chain);\n    };\n  });\n\n  // Start chaining a wrapped Underscore object.\n  wrapper.prototype.chain = function() {\n    this._chain = true;\n    return this;\n  };\n\n  // Extracts the result from a wrapped and chained object.\n  wrapper.prototype.value = function() {\n    return this._wrapped;\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}