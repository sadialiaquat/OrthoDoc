{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Appointment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport TimePicker from 'react-time-picker';\nimport 'react-calendar/dist/Calendar.css';\nimport { Link } from 'react-router-dom';\nimport './Calender.css';\nimport './Clock.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport Sidebar from './Sidebar';\nimport { useLocation } from 'react-router-dom';\nimport { db, authentication } from '../firebase-config';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { collection, getDocs } from 'firebase/firestore'; //import StripeContainer from './StripeContainer';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Appointment() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [endTime, setendTime] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [time, setTime] = useState(\"\");\n  const [slots, setSlots] = useState([]);\n  useEffect(() => {\n    if (!authentication.currentUser) {\n      navigate('/login');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splash\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this);\n    }\n\n    getSlots();\n  }, []);\n\n  function getSlots() {\n    let list = [];\n    let x = {\n      slotInterval: 30,\n      openTime: location.state.startTime,\n      closeTime: location.state.endTime\n    };\n    let startTime = moment(x.openTime, \"HH:mm\");\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\n\n    while (startTime < endTime) {\n      list.push(startTime.format(\"HH:mm\"));\n      startTime.add(x.slotInterval, 'minutes');\n    }\n\n    setSlots(list);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"date-heading\",\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setDate,\n            value: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [\"Selected date: \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"time-heading\",\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-time\",\n          children: [\"Selected Time:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeslots\",\n            children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn_slot\",\n              onClick: () => setTime(slot),\n              children: slot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Appointment-button\",\n          onClick: () => {\n            var _authentication$curre;\n\n            return navigate('/stripeContainer', {\n              state: {\n                id: location.state.id,\n                patientId: (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email,\n                startTime: startTime,\n                endTime: endTime\n              }\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"book\",\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Appointment, \"TSCkxoS+VtdCXXSFreQl0fTT5Yw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Appointment;\nexport default Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/src/Pages/Appointment.js"],"names":["useState","Calendar","TimePicker","Link","useNavigate","useEffect","Sidebar","useLocation","db","authentication","Moment","moment","collection","getDocs","Appointment","navigate","location","endTime","setendTime","startTime","setStartTime","date","setDate","Date","time","setTime","slots","setSlots","currentUser","getSlots","list","x","slotInterval","openTime","state","closeTime","add","push","format","toDateString","map","slot","id","patientId","email"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './Calender.css';\r\nimport './Clock.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  useEffect } from \"react\";\r\nimport Sidebar from './Sidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { db,authentication } from '../firebase-config';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n//import StripeContainer from './StripeContainer';\r\n\r\nfunction Appointment() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [endTime, setendTime] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(\"\");\r\n  const [slots, setSlots] = useState([]);\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n      if(!authentication.currentUser){\r\n          navigate('/login');\r\n          return <div className='splash'>\r\n              Loading\r\n          </div>\r\n      }\r\n      getSlots();\r\n  },[])\r\n\r\n  function getSlots(){\r\n    let list = [];\r\n    let x = {\r\n        slotInterval: 30,\r\n        openTime: location.state.startTime,\r\n        closeTime: location.state.endTime\r\n      };\r\n    let startTime = moment(x.openTime, \"HH:mm\");\r\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\r\n\r\n    while (startTime < endTime) {\r\n        list.push(startTime.format(\"HH:mm\")); \r\n        startTime.add(x.slotInterval, 'minutes');\r\n      }\r\n    setSlots(list);\r\n}\r\n\r\n  return (<><Sidebar>\r\n    <div className='main-main'>\r\n      <div className='search-heading'>Appointment</div>\r\n      <div className='calendar-container'>\r\n         <h1 className='date-heading'>Select Date</h1>\r\n        <Calendar onChange={setDate} value={date} />\r\n      </div>\r\n      <div className=\"selected-date\">\r\n      Selected date: {date.toDateString()}\r\n   </div>\r\n          <div className='time-container'>\r\n          <h1 className='time-heading'>Select Time</h1>\r\n          </div>\r\n          <div className=\"selected-time\">\r\n      Selected Time:\r\n      <div className='timeslots'>{\r\n            \r\n            slots.map((slot)=>\r\n                <button className='btn_slot' onClick={()=>setTime(slot)}>{slot}</button>\r\n            )\r\n        \r\n\r\n}</div>\r\n   </div>\r\n\r\n\r\n          <button className=\"Appointment-button\"  onClick={() => navigate('/stripeContainer', { state: { id: location.state.id, patientId:authentication.currentUser?.email, startTime: startTime, endTime: endTime }})}\r\n      >\r\n       <h5 className=\"book\">Book Appointment</h5>\r\n      </button>\r\n\r\n\r\n    </div></Sidebar>\r\n    </> );\r\n}\r\n\r\nexport default Appointment;"]},"metadata":{},"sourceType":"module"}