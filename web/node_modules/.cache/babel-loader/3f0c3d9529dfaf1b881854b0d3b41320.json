{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\DoctorMessenger.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { authentication } from '../firebase-config';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { db } from '../firebase-config';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { query, where } from \"firebase/firestore\";\nimport DoctorSidebar from './DoctorSidebar';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DoctorMessenger() {\n  _s();\n\n  const navigate = useNavigate(); // useEffect(()=>{\n  //    if(!authentication.currentUser){\n  //       navigate('/login');\n  //     return <div className='splash'>\n  //        Loading   \n  //  </div>\n  //    }\n  // },[])\n\n  const [users, setusers] = useState([]);\n  console.log(\"AUTH\" + authentication.currentUser.email);\n\n  if (!authentication.currentUser) {\n    alert(\"Please Login First\"); //navigation.navigate(\"login\");\n  }\n\n  const mail = authentication.currentUser.email;\n  const auth = getAuth();\n  let usersEmail = [];\n\n  const querySnapshot = async () => {\n    var _authentication$curre, _authentication$curre2;\n\n    const col = collection(db, \"chatroom\");\n    const q = query(col, where(\"sentBy\", \"==\", (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email));\n    const q2 = query(col, where(\"sentTo\", \"==\", (_authentication$curre2 = authentication.currentUser) === null || _authentication$curre2 === void 0 ? void 0 : _authentication$curre2.email));\n    const snap = await getDocs(q);\n    const snap3 = await getDocs(q2); //let usersEmail = [];\n\n    console.log(\"b4 snap 1\");\n    snap.forEach(doc => {\n      if (!usersEmail.find(email => email == doc.data().sentTo)) {\n        usersEmail.push(doc.data().sentTo);\n      }\n    });\n    console.log(\"b4 snap 3\");\n    snap3.forEach(doc => {\n      if (!usersEmail.find(email => email == doc.data().sentBy)) {\n        // if (doc.data().sentTo != props.route.params.params.param1)\n        usersEmail.push(doc.data().sentBy);\n      }\n    });\n    usersEmail.map(async email => {\n      const col2 = collection(db, \"users\");\n      const q2 = query(col2, where(\"email\", \"==\", email));\n      const snap2 = await getDocs(q2);\n      snap2.forEach(doc => {\n        console.log(\"hello\");\n        setusers(user => [...user, doc.data()]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    querySnapshot();\n  }, []);\n  usersEmail.forEach(d => {\n    setusers(prev => [...prev, d.data()]);\n  });\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DoctorSidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Conversations-h\",\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"convo-sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"convo-ul\",\n            children: users.map(user => {\n              var _user$displayName;\n\n              return /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => {\n                  var _authentication$curre3;\n\n                  return navigate('/doctorMessage', {\n                    state: {\n                      docid: (_authentication$curre3 = authentication.currentUser) === null || _authentication$curre3 === void 0 ? void 0 : _authentication$curre3.email,\n                      userid: user.email,\n                      current: \"doctor\"\n                    }\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"convo-li\",\n                  children: [(_user$displayName = user.displayName) !== null && _user$displayName !== void 0 ? _user$displayName : user.email, \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"--------------------\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 60\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 10\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(DoctorMessenger, \"a8OhDfMGVKZltYB52D48N2hMqRk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DoctorMessenger;\nexport default DoctorMessenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorMessenger\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/DoctorMessenger.js"],"names":["React","authentication","useNavigate","useState","useEffect","db","collection","getDocs","query","where","DoctorSidebar","getAuth","onAuthStateChanged","DoctorMessenger","navigate","users","setusers","console","log","currentUser","email","alert","mail","auth","usersEmail","querySnapshot","col","q","q2","snap","snap3","forEach","doc","find","data","sentTo","push","sentBy","map","col2","snap2","user","d","prev","state","docid","userid","current","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { authentication } from '../firebase-config';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { db } from '../firebase-config';\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { query, where } from \"firebase/firestore\";\r\nimport DoctorSidebar from './DoctorSidebar';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nfunction DoctorMessenger(){\r\n  const navigate = useNavigate();\r\n // useEffect(()=>{\r\n  //    if(!authentication.currentUser){\r\n   //       navigate('/login');\r\n     //     return <div className='splash'>\r\n      //        Loading   \r\n        //  </div>\r\n  //    }\r\n // },[])\r\n const [users, setusers] = useState([]);\r\n console.log(\"AUTH\"+ authentication.currentUser.email);\r\n if(!authentication.currentUser){\r\n   \r\n   alert(\"Please Login First\");\r\n   //navigation.navigate(\"login\");\r\n}\r\nconst mail = authentication.currentUser.email;\r\n const auth = getAuth();\r\n let usersEmail = [];\r\n const querySnapshot = async () => {\r\n\r\n   const col = collection(db, \"chatroom\");\r\n   const q = query(\r\n     col,\r\n     where(\"sentBy\", \"==\", authentication.currentUser?.email)\r\n   );\r\n   const q2 = query(\r\n     col,\r\n     where(\"sentTo\", \"==\", authentication.currentUser?.email)\r\n   );\r\n\r\n   const snap = await getDocs(q);\r\n   const snap3 = await getDocs(q2);\r\n\r\n   //let usersEmail = [];\r\n   console.log(\"b4 snap 1\");\r\n   snap.forEach((doc) => {\r\n\r\n     if (!usersEmail.find((email) => email == doc.data().sentTo)) {\r\n       usersEmail.push(doc.data().sentTo);\r\n     }\r\n   });\r\n   console.log(\"b4 snap 3\");\r\n   snap3.forEach((doc) => {\r\n\r\n     if (!usersEmail.find((email) => email == doc.data().sentBy)) {\r\n       // if (doc.data().sentTo != props.route.params.params.param1)\r\n       usersEmail.push(doc.data().sentBy);\r\n     }\r\n\r\n   });  \r\n\r\n\r\n   usersEmail.map(async (email) => {\r\n     const col2 = collection(db, \"users\");\r\n     const q2 = query(col2, where(\"email\", \"==\", email));\r\n     const snap2 = await getDocs(q2);\r\n     snap2.forEach((doc) => {\r\n  console.log(\"hello\");\r\n       setusers((user) => [...user, doc.data()]);\r\n     });\r\n     \r\n   });\r\n };\r\n\r\n\r\n useEffect(() => {\r\n   querySnapshot();\r\n\r\n }, []);\r\n usersEmail.forEach((d)=>{\r\n  setusers((prev) => [...prev, d.data()]);\r\n })\r\n   console.log(users);\r\n\r\nreturn (<>  \r\n   <DoctorSidebar>\r\n<div className=\"main-main\">\r\n<h1 className='Conversations-h'><u>Conversations</u></h1>\r\n<div className='convo-sidebar'>\r\n    <ul className='convo-ul'>\r\n      {users.map((user)=>(\r\n         <a onClick={() => navigate('/doctorMessage', { state: { docid:authentication.currentUser?.email , userid:user.email ,current:\"doctor\"} })}>\r\n  <li className='convo-li'>{user.displayName?? user.email} <p>--------------------</p></li></a>\r\n\r\n ) ) } \r\n    </ul></div> \r\n                </div>\r\n            </DoctorSidebar>\r\n\r\n    </>)}\r\n\r\nexport default DoctorMessenger;"]},"metadata":{},"sourceType":"module"}