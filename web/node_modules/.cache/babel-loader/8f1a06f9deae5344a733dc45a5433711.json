{"ast":null,"code":"var _jsxFileName = \"D:\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport { collection, getDocs, orderBy } from \"firebase/firestore\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { query, where } from \"firebase/firestore\";\nimport { useLocation } from 'react-router-dom';\nimport { authentication, db, storage } from '../firebase-config';\nimport { useState, useEffect } from \"react\";\nimport Messenger from \"./Messenger\";\nimport { Link } from \"react-router-dom\";\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\nimport { MdSend } from \"react-icons/md\";\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Message() {\n  _s();\n\n  const location = useLocation();\n  const [messages, setMessages] = useState([]);\n  const [temp, setTemp] = useState(\"\");\n  let messageArraay = [];\n\n  const querySnapshot = async () => {\n    console.log(\"State\", location.state.docid);\n    const col = collection(db, \"chatroom\");\n    const q = query(col, where(\"chatId\", \"==\", location.state.userid + location.state.docid), orderBy(\"createdAt\", \"asc\"));\n    const snap = await getDocs(q);\n    snap.forEach(doc => {\n      const new_obj = { ...doc.data()\n      };\n      messageArraay.push(new_obj);\n    });\n    console.log(\"message array\", messageArraay);\n    setMessages(messageArraay); // console.log(\"REVERSE\",messageArraay.reverse())\n  };\n\n  useEffect(() => {\n    querySnapshot();\n  }, []);\n\n  const sendImageMessage = e => {\n    const image = e.target.files[0];\n    const fileType = image.type.split('/')[1];\n    const storageRef = ref(storage, `image-${Date.now()}.${fileType}`);\n    const uploadTask = uploadBytesResumable(storageRef, image);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n    }, error => {\n      reject(error);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        addMessage(downloadURL, 'image');\n      });\n    });\n  };\n\n  const addMessage = async (temp, type) => {\n    try {\n      const msg = messages[0];\n      const mymsg = { ...msg,\n        sentBy: location.state.current == \"doctor\" ? location.state.docid : location.state.userid,\n        sentTo: location.state.current == \"doctor\" ? location.state.userid : location.state.docid,\n        createdAt: new Date(),\n        chatId: location.state.userid + location.state.docid,\n        text: temp,\n        type: type\n      };\n      const myDoc = doc(db, \"chatroom\", new Date().toString());\n      setDoc(myDoc, mymsg).then(() => {\n        console.log(\"Document written with ID: \", myDoc.id);\n      }).catch(error => {\n        console.error(\"Error adding document: \", error.message);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const sendTextMessage = () => {};\n\n  console.log(\"Doc id :\", location.state.docid);\n  console.log(\"User id\", location.state.userid);\n  console.log(\"temppp\", messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages.map((item, uid) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `msg ${item.sentBy == authentication.currentUser.email ? 'sent' : 'received'}`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"P\",\n                  children: [item.text, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"chatMessageInput\",\n              onChange: e => setTemp(e.target.value),\n              placeholder: \"Write something..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: sendImageMessage,\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatSubmitButton\",\n              onClick: sendTextMessage,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sendicon\",\n                children: [\"  \", /*#__PURE__*/_jsxDEV(MdSend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backtohome\",\n        children: /*#__PURE__*/_jsxDEV(FaArrowCircleLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Message, \"ZzmPzeMCW97UlTg1Zs8rUup1CtU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["D:/OrthoDoc/web/src/Pages/Message.js"],"names":["collection","getDocs","orderBy","doc","setDoc","query","where","useLocation","authentication","db","storage","useState","useEffect","Messenger","Link","FaArrowCircleLeft","MdSend","ref","getDownloadURL","uploadBytesResumable","Message","location","messages","setMessages","temp","setTemp","messageArraay","querySnapshot","console","log","state","docid","col","q","userid","snap","forEach","new_obj","data","push","sendImageMessage","e","image","target","files","fileType","type","split","storageRef","Date","now","uploadTask","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","reject","then","downloadURL","addMessage","msg","mymsg","sentBy","current","sentTo","createdAt","chatId","text","myDoc","toString","id","catch","message","sendTextMessage","map","item","uid","currentUser","email","value"],"mappings":"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","sourcesContent":["import { collection, getDocs, orderBy } from \"firebase/firestore\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { query, where } from \"firebase/firestore\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { authentication, db, storage } from '../firebase-config';\r\nimport { useState, useEffect} from \"react\";\r\nimport Messenger from \"./Messenger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport { ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\r\nfunction Message() {\r\n  const location = useLocation();\r\n  const [messages, setMessages] = useState([]);\r\n  const [temp, setTemp] = useState(\"\");\r\n\r\n  \r\n  let messageArraay = [];\r\n  const querySnapshot = async () => {\r\n    console.log(\"State\", location.state.docid);\r\n    const col = collection(db, \"chatroom\");\r\n    const q = query(\r\n      col,\r\n      where(\r\n        \"chatId\",\r\n        \"==\",\r\n        location.state.userid + location.state.docid\r\n      ), orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    const snap = await getDocs(q);\r\n   \r\n    snap.forEach((doc) => {\r\n      const new_obj = {\r\n        ...doc.data(),\r\n      };\r\n\r\n      messageArraay.push(new_obj);\r\n    });\r\n    console.log(\"message array\", messageArraay);\r\n    setMessages(messageArraay);\r\n    // console.log(\"REVERSE\",messageArraay.reverse())\r\n  };\r\n  useEffect(() => {\r\n    querySnapshot();\r\n  }, []);\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n  const sendImageMessage = (e) => {\r\n    const image = e.target.files[0];\r\n    const fileType = image.type.split('/')[1];\r\n    const storageRef = ref(storage, `image-${Date.now()}.${fileType}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, image);\r\n    uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {\r\n            const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n        },\r\n        (error) => {\r\n            reject(error);\r\n        },\r\n        () => {\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                addMessage(downloadURL, 'image');\r\n            });\r\n        }\r\n    );\r\n};\r\n\r\nconst addMessage = async (temp, type) => {\r\n  try {\r\n    \r\n    const msg = messages[0];\r\n    const mymsg = {\r\n      ...msg,\r\n      sentBy:\r\n        location.state.current == \"doctor\"\r\n          ? location.state.docid\r\n          : location.state.userid,\r\n      sentTo:\r\n        location.state.current == \"doctor\"\r\n          ? location.state.userid\r\n          : location.state.docid,\r\n\r\n      createdAt: new Date(),\r\n      chatId:\r\n        location.state.userid + location.state.docid,\r\n      text:temp,\r\n      type:type,\r\n    \r\n    \r\n    \r\n    }\r\n    const myDoc = doc(db, \"chatroom\", new Date().toString());\r\n    setDoc(myDoc, mymsg)\r\n      .then(() => {\r\n        console.log(\"Document written with ID: \", myDoc.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error.message);\r\n      });\r\n  \r\n  }\r\n    catch (error) {\r\n      console.log(error);\r\n  }\r\n};\r\nconst sendTextMessage = () => {\r\n\r\n};\r\n\r\n\r\n\r\n  console.log(\"Doc id :\", location.state.docid)\r\n  console.log(\"User id\", location.state.userid)\r\n  console.log(\"temppp\", messages);\r\n  return (\r\n    <>\r\n\r\n      <div className=\"messenger\">\r\n    \r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n\r\n              <div className='chatBoxTop'>\r\n              {messages.map((item, uid) => (\r\n                 <div className=\"messages\">\r\n                  \r\n                <div className={`msg ${item.sentBy== authentication.currentUser.email? 'sent' : 'received'}`}>\r\n                  <p className=\"P\">{item.text} </p>\r\n                </div></div>\r\n              ))}\r\n              </div>\r\n              <div className=\"chatBoxBottom\">\r\n                <input className=\"chatMessageInput\"  onChange={(e) => setTemp(e.target.value)}  placeholder=\"Write something..\"></input>\r\n                <input type=\"file\" onChange={sendImageMessage}> </input>\r\n                <button className=\"chatSubmitButton\" onClick={sendTextMessage}>\r\n                  <div className='sendicon'>  <MdSend /></div>\r\n                </button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <Link to='/home'>\r\n        <div className='backtohome'><FaArrowCircleLeft /></div></Link>\r\n    </>\r\n\r\n  );\r\n}\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}