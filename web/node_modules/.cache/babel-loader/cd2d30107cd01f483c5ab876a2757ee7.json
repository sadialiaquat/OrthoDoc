{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Appointment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport TimePicker from 'react-time-picker';\nimport 'react-calendar/dist/Calendar.css';\nimport { Link } from 'react-router-dom';\nimport './Calender.css';\nimport './Clock.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport Sidebar from './Sidebar';\nimport { useLocation } from 'react-router-dom';\nimport { db, authentication } from '../firebase-config';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { collection, getDocs, where, query } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Appointment() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [date, setDate] = useState(new Date());\n  const [time, setTime] = useState(\"\");\n  const [slots, setSlots] = useState([]);\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\n  useEffect(() => {\n    if (!authentication.currentUser) {\n      navigate('/login');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splash\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    } else {\n      getSlots();\n    }\n  }, []);\n\n  async function getAppointments() {\n    const list = [];\n    const docRef = await getDocs(query(collection(db, 'appointments'), where('doctorId', '==', `${location.state.id}`)));\n    docRef.forEach(each => {\n      list.push({\n        id: each.id,\n        ...each.data()\n      });\n    });\n    return list;\n  }\n\n  ;\n\n  async function getSlots() {\n    let list = [];\n    let x = {\n      slotInterval: 30,\n      openTime: location.state.startTime,\n      closeTime: location.state.endTime\n    };\n    let startTime = moment(x.openTime, \"HH:mm\");\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\n\n    while (startTime < endTime) {\n      list.push(startTime.format(\"HH:mm\"));\n      startTime.add(x.slotInterval, 'minutes');\n    }\n\n    const selectedAppointments = await getAppointments();\n\n    for (let i = 0; i < selectedAppointments.length; i++) {\n      const index = list.indexOf(selectedAppointments[i].timeSlot);\n      const d = new Date(selectedAppointments[i].date.seconds).toDateString();\n      console.log(d);\n\n      if (index !== -1) {\n        list.splice(index, 1);\n      }\n    }\n\n    setSlots(list);\n  }\n\n  function nextStep() {\n    var _authentication$curre;\n\n    if (!date || !time) {\n      alert(\"Please select date or time\");\n      return;\n    }\n\n    navigate('/stripeContainer', {\n      state: {\n        id: location.state.id,\n        patientId: (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email,\n        date: date,\n        timeSlot: time\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"date-heading\",\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setDate,\n            value: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-date\",\n          children: [\"Selected date: \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"time-heading\",\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-time\",\n          children: [\"Selected Time:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeslots\",\n            children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn_slot ${slot === time && 'btn-selected'}`,\n              onClick: () => setTime(slot),\n              children: slot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Appointment-button\",\n          onClick: nextStep,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"book\",\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Appointment, \"R+hLVkyAe0efyj3X8+IJXmUts3s=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Appointment;\nexport default Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/src/Pages/Appointment.js"],"names":["useState","Calendar","TimePicker","Link","useNavigate","useEffect","Sidebar","useLocation","db","authentication","Moment","moment","collection","getDocs","where","query","Appointment","navigate","location","date","setDate","Date","time","setTime","slots","setSlots","selectedAppointments","setSelectedAppointments","currentUser","getSlots","getAppointments","list","docRef","state","id","forEach","each","push","data","x","slotInterval","openTime","startTime","closeTime","endTime","add","format","i","length","index","indexOf","timeSlot","d","seconds","toDateString","console","log","splice","nextStep","alert","patientId","email","map","slot"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './Calender.css';\r\nimport './Clock.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  useEffect } from \"react\";\r\nimport Sidebar from './Sidebar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { db,authentication } from '../firebase-config';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { collection, getDocs, where, query } from 'firebase/firestore';\r\n\r\n\r\nfunction Appointment() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(\"\");\r\n  const [slots, setSlots] = useState([]);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(!authentication.currentUser){\r\n      navigate('/login');\r\n      return <div className='splash'>\r\n          Loading\r\n      </div>\r\n  }else{\r\n    getSlots();\r\n  }\r\n  },[])\r\n\r\n  async function getAppointments(){\r\n    const list =[];\r\n      const docRef = await getDocs(query(collection(db, 'appointments'),where('doctorId', '==', `${location.state.id}`)));\r\n      docRef.forEach((each)=>{\r\n        list.push( {id:each.id, ...each.data()});\r\n      })\r\n      return list;\r\n  };\r\n\r\n  async function getSlots(){\r\n    let list = [];\r\n    let x = {\r\n        slotInterval: 30,\r\n        openTime: location.state.startTime,\r\n        closeTime: location.state.endTime\r\n      };\r\n    let startTime = moment(x.openTime, \"HH:mm\");\r\n    let endTime = moment(x.closeTime, \"HH:mm\").add(0, 'days');\r\n\r\n    while (startTime < endTime) {\r\n      list.push(startTime.format(\"HH:mm\"));\r\n        startTime.add(x.slotInterval, 'minutes');\r\n      }\r\n      const selectedAppointments = await getAppointments();\r\n      for(let i = 0; i<selectedAppointments.length; i++){\r\n        const index = list.indexOf(selectedAppointments[i].timeSlot);\r\n        const d = new Date(selectedAppointments[i].date.seconds).toDateString();\r\n        console.log(d);\r\n\r\n        if(index !== -1){\r\n          list.splice(index, 1);\r\n        }\r\n      }\r\n    \r\n    setSlots(list);\r\n}\r\n  function nextStep(){\r\n    if(!date || !time){\r\n      alert(\"Please select date or time\")\r\n      return;\r\n    }\r\n    navigate('/stripeContainer', { state: { id: location.state.id, patientId:authentication.currentUser?.email, date: date, timeSlot: time }})\r\n\r\n  }\r\n  return (<><Sidebar>\r\n    <div className='main-main'>\r\n      <div className='search-heading'>Appointment</div>\r\n      <div className='calendar-container'>\r\n         <h1 className='date-heading'>Select Date</h1>\r\n        <Calendar onChange={setDate} value={date} />\r\n      </div>\r\n      <div className=\"selected-date\">\r\n      Selected date: {date.toDateString()}\r\n   </div>\r\n          <div className='time-container'>\r\n          <h1 className='time-heading'>Select Time</h1>\r\n          </div>\r\n          <div className=\"selected-time\">\r\n      Selected Time:\r\n      <div className='timeslots'>{\r\n            \r\n            slots.map((slot)=>\r\n            <button className={`btn_slot ${slot===time && 'btn-selected'}`} onClick={()=>setTime(slot)}>{slot}</button>)\r\n    \r\n        \r\n\r\n}</div>\r\n   </div>\r\n\r\n\r\n          <button className=\"Appointment-button\"  onClick={nextStep}\r\n      >\r\n       <h5 className=\"book\">Book Appointment</h5>\r\n      </button>\r\n\r\n\r\n\r\n    </div></Sidebar>\r\n    </> );\r\n}\r\n\r\nexport default Appointment;"]},"metadata":{},"sourceType":"module"}