{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\AdminViewPatient.js\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport AdminSidebar from './AdminSidebar';\nimport { useState, useEffect } from \"react\"; //import { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport { db } from '../firebase-config';\nimport { collection, doc, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminViewPatient() {\n  _s();\n\n  var Users = [];\n  const [data, setData] = useState([]); //const [email, setEmail]=useState([]);\n\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    const querySnapshot = getDocs(collection(db, \"users\")).then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(\"Usersss\", doc.id, \" => \", doc.data());\n        const response = doc.data(); //const email=doc.data().email;\n\n        Doctors.push(response); // setEmail(prev=>[...prev,email])\n\n        setData(prev => [...prev, response]); // setPatient(Users);\n        // Alert.alert(\"LoggedIn as Doctor\");\n        // setDoc(\"False\");\n        //console.log(\"SEARCH RESULTS===\"+Doctors)\n      });\n      console.log(\"Users's Array :\", Users);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AdminSidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"Search for patients to view their profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search__input\",\n            type: \"text\",\n            id: \"search\",\n            placeholder: \"Search here...\",\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search__button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMagnifyingGlass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"search-results\",\n          children: data.filter(user => user.displayName.toLowerCase().includes(query)).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fetch-doctor\",\n            children: [user.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), user.displayName]\n          }, user.displayName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(AdminViewPatient, \"gVP2AkICvfumelkruAKKwuQ2yZw=\");\n\n_c = AdminViewPatient;\nexport default AdminViewPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminViewPatient\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/AdminViewPatient.js"],"names":["FontAwesomeIcon","faMagnifyingGlass","AdminSidebar","useState","useEffect","db","collection","doc","getDocs","AdminViewPatient","Users","data","setData","query","setQuery","querySnapshot","then","forEach","console","log","id","response","Doctors","push","prev","e","target","value","filter","user","displayName","toLowerCase","includes","map","email"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport AdminSidebar from './AdminSidebar';\r\nimport { useState , useEffect } from \"react\";\r\n//import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { db } from '../firebase-config';\r\nimport { collection, doc, getDocs } from 'firebase/firestore';\r\nfunction AdminViewPatient () {\r\n    var Users=[];\r\n    const [data, setData] = useState([]);\r\n    //const [email, setEmail]=useState([]);\r\n    const [query, setQuery] = useState('');\r\n    useEffect(() => {\r\n      const querySnapshot = getDocs(collection(db, \"users\")).then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          console.log(\"Usersss\",doc.id, \" => \", doc.data());\r\n          const response = doc.data();\r\n          //const email=doc.data().email;\r\n          Doctors.push(response);\r\n         // setEmail(prev=>[...prev,email])\r\n          setData(prev=>[...prev,response])\r\n          // setPatient(Users);\r\n          // Alert.alert(\"LoggedIn as Doctor\");\r\n          // setDoc(\"False\");\r\n          //console.log(\"SEARCH RESULTS===\"+Doctors)\r\n      });console.log(\"Users's Array :\",Users)   \r\n      }); \r\n  }, []);\r\n\r\n\r\n    return (<>\r\n    <AdminSidebar>\r\n    <div className=\"search-main\">\r\n      <div className=\"search-heading\">Search for patients to view their profile</div> \r\n            <div className=\"search\" >\r\n                <input\r\n                    className=\"search__input\"\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    placeholder=\"Search here...\"\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button className=\"search__button\">\r\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                </button>\r\n            </div>\r\n            <ul className=\"search-results\">\r\n         {data.filter((user) =>\r\n           user.displayName.toLowerCase().includes(query)\r\n         ).map((user) => (\r\n           <li className=\"fetch-doctor\" key={user.displayName}>\r\n            {user.email}<br/>{user.displayName}\r\n          </li>\r\n       ))}\r\n       </ul>\r\n\r\n       \r\n       \r\n        </div></AdminSidebar>\r\n            </>\r\n    )\r\n    }\r\nexport default AdminViewPatient"]},"metadata":{},"sourceType":"module"}