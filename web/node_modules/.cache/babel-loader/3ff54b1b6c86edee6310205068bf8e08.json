{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\ViewProfile.js\",\n    _authentication$curre,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Sidebar from \"./Sidebar\";\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { db, authentication } from '../firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst email = (_authentication$curre = authentication.currentUser) === null || _authentication$curre === void 0 ? void 0 : _authentication$curre.email;\n\nfunction ViewProfile() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [users, setUsers] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [mail, setMail] = useState(location.state.id);\n\n  const fetchData = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"doctors\"));\n      querySnapshot.forEach(doc => {\n        if (mail === doc.data().email) {\n          setUsers(prev => [...prev, doc.data()]);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function getSlots() {\n    let list = [];\n    let x = {\n      slotInterval: 30,\n      openTime: '09:00',\n      closeTime: '17:00'\n    };\n    let startTime = moment(x.openTime, \"HH:mm\");\n    let endTime = moment(x.closeTime, \"HH:mm\").add(1, 'days');\n\n    while (startTime < endTime) {\n      list.push(startTime.format(\"HH:mm\"));\n      startTime.add(x.slotInterval, 'minutes');\n    }\n\n    setSlots(list);\n  }\n\n  useEffect(() => {\n    fetchData();\n    getSlots();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"View Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), users.map((item, key) => item.address.map((itm, k) => {\n          var _item$displayName, _item$phoneNumber;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-main\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-v\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaUserCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"markk\",\n              children: [\" \", (_item$displayName = item.displayName) !== null && _item$displayName !== void 0 ? _item$displayName : item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email address: \", mail]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone Number: \", (_item$phoneNumber = item.phoneNumber) !== null && _item$phoneNumber !== void 0 ? _item$phoneNumber : item.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Street No: \", itm[0].streetNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"District: \", itm[0].district]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"City: \", itm[0].city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Region:\", itm[0].region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _authentication$curre2;\n\n                return navigate('/message', {\n                  state: {\n                    docid: mail,\n                    userid: (_authentication$curre2 = authentication.currentUser) === null || _authentication$curre2 === void 0 ? void 0 : _authentication$curre2.email,\n                    current: \"patient\"\n                  }\n                });\n              },\n              type: \"submit\",\n              className: \"c-button\",\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/appointment\",\n              children: [\"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"b-button\",\n                children: \"Book Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this);\n        }))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewProfile, \"XBaOnRniv7rajqbt/ClKJePPpQ8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ViewProfile;\nexport default ViewProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProfile\");","map":{"version":3,"sources":["D:/Web/OrthoDoc/web/src/Pages/ViewProfile.js"],"names":["React","Sidebar","useLocation","useState","useEffect","db","authentication","collection","getDocs","useNavigate","FaUserCircle","Link","moment","email","currentUser","ViewProfile","navigate","location","users","setUsers","slots","setSlots","mail","setMail","state","id","fetchData","querySnapshot","forEach","doc","data","prev","err","console","log","getSlots","list","x","slotInterval","openTime","closeTime","startTime","endTime","add","push","format","map","item","key","address","itm","k","displayName","name","phoneNumber","contact","streetNumber","district","city","region","docid","userid","current"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { db,authentication } from '../firebase-config';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'react-moment';\r\n\r\n\r\nconst email = authentication.currentUser?.email;\r\nfunction ViewProfile() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [users, setUsers] = useState([]);\r\n    const [slots, setSlots] = useState([]);\r\n\r\n    const [mail, setMail] = useState(location.state.id);\r\n    const fetchData = async () => {\r\n        try {\r\n            const querySnapshot = await getDocs(collection(db, \"doctors\"));\r\n            querySnapshot.forEach((doc) => {\r\n                if (mail === doc.data().email) {\r\n                    setUsers((prev) => [...prev, doc.data()]);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    \r\n    function getSlots(){\r\n        let list = [];\r\n        let x = {\r\n            slotInterval: 30,\r\n            openTime: '09:00',\r\n            closeTime: '17:00'\r\n          };\r\n        let startTime = moment(x.openTime, \"HH:mm\");\r\n        let endTime = moment(x.closeTime, \"HH:mm\").add(1, 'days');\r\n    \r\n        while (startTime < endTime) {\r\n            list.push(startTime.format(\"HH:mm\")); \r\n            startTime.add(x.slotInterval, 'minutes');\r\n          }\r\n        setSlots(list);\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n        getSlots();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Sidebar>\r\n                <div className=\"main-main\">\r\n                    <div className=\"search-heading\">View Profile</div>\r\n                    {/* {\r\n                        slots.map((slot)=>{\r\n                            console.log(slot)\r\n                        })\r\n                    } */}\r\n                    {users.map((item, key) => (\r\n                        item.address.map(\r\n                            (itm, k) => (\r\n                                <div className='view-main'>\r\n                                   <div className='profile-v'> <FaUserCircle/></div>\r\n                                   <p className='markk'> {item.displayName ?? item.name}</p>\r\n                                    <p>Email address: {mail}</p>\r\n                                    <p>Phone Number: {item.phoneNumber ?? item.contact}</p>\r\n                                    <p>Street No: {itm[0].streetNumber}</p>\r\n                                    <p>District: {itm[0].district}</p>\r\n                                    <p>City: {itm[0].city}</p>\r\n                                    <p>Region:{itm[0].region}</p>\r\n\r\n                                    <button onClick={() => navigate('/message', { state: { docid: mail , userid:authentication.currentUser?.email ,current:\"patient\"} })} type=\"submit\" className=\"c-button\">\r\n                                        Chat\r\n                                    </button>\r\n                                  <Link to='/appointment'>  <button type=\"submit\" className=\"b-button\">\r\n                                        Book Appointment\r\n                                    </button></Link>\r\n                                </div>\r\n\r\n\r\n                            )\r\n                        )\r\n                    ))}\r\n\r\n                </div>\r\n            </Sidebar>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default ViewProfile; "]},"metadata":{},"sourceType":"module"}