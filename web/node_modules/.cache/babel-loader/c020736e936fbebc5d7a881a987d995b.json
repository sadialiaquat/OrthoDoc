{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { query, where } from \"firebase/firestore\";\nimport { useLocation } from 'react-router-dom';\nimport { authentication, db } from '../firebase-config';\nimport { useState, useEffect } from \"react\";\nimport Messenger from \"./Messenger\";\nimport { Link } from \"react-router-dom\";\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\nimport { MdSend } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Message() {\n  _s();\n\n  const location = useLocation();\n  const [messages, setMessages] = useState([]);\n  const [temp, setTemp] = useState([]);\n  const messageClass = userid === authentication.currentUser.userid ? 'sent' : 'received';\n\n  const querySnapshot = async () => {\n    console.log(\"State\", location.state.docid);\n    const col = collection(db, \"chatroom\");\n    const q = query(col, where(\"chatId\", \"==\", location.state.userid + location.state.docid));\n    const snap = await getDocs(q);\n    let messageArraay = [];\n    snap.forEach(doc => {\n      const new_obj = { ...doc.data(),\n        createdAt: doc.data().createdAt.toDate()\n      };\n      messageArraay.push(new_obj);\n    });\n    console.log(\"message array\", messageArraay);\n    setMessages(messageArraay.reverse());\n    console.log(\"msgs array\", messages);\n  };\n\n  useEffect(() => {\n    //console.log(props.route);\n    querySnapshot();\n  }, []);\n\n  const onSend = messageArray => {\n    const msg = messageArray[0];\n    const mymsg = { ...msg,\n      sentBy: location.state.current == \"doctor\" ? location.state.docid : location.state.userid,\n      sentTo: location.state.current == \"doctor\" ? location.state.userid : location.state.docid,\n      craetedAt: new Date(),\n      chatId: location.state.userid + location.state.docid\n    }; //setMessages((previousMessages) =>\n    // setTemp((prev) => [...prev, mymsg]);\n    //temp.append(previousMessages,mymsg);\n    //GiftedChat.append(previousMessages, mymsg)\n    //console.log(\"set messages\"+temp);\n    //);\n\n    setMessages(previousMessages => setTemp(previousMessages => [...previousMessages, mymsg])); //console.log(\"temppp\",temp);\n\n    const docid = location.state.docid > location.state.userid ? location.state.userid + \"-\" + location.state.docid : location.state.docid + \"-\" + location.state.userid;\n    const myDoc = doc(db, \"chatroom\", new Date().toString());\n    setDoc(myDoc, mymsg).then(() => {\n      console.log(\"Document written with ID: \", myDoc.id);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error.message);\n    });\n  };\n\n  console.log(\"Doc id :\", location.state.docid);\n  console.log(\"User id\", location.state.userid);\n  console.log(\"temppp\", temp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(Messenger, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: messages ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this), messages.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${messageClass}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messageTop\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"messageText\",\n                  children: [item.text, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messageBottom\",\n                children: \"1 hour ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 3\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"Write something..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sendicon\",\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(MdSend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this), \" \"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backtohome\",\n        children: /*#__PURE__*/_jsxDEV(FaArrowCircleLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Message, \"lW2BfiMKl2bJ2/BEJzRfj1KZFHs=\", false, function () {\n  return [useLocation];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/Message.js"],"names":["collection","getDocs","doc","setDoc","query","where","useLocation","authentication","db","useState","useEffect","Messenger","Link","FaArrowCircleLeft","MdSend","Message","location","messages","setMessages","temp","setTemp","messageClass","userid","currentUser","querySnapshot","console","log","state","docid","col","q","snap","messageArraay","forEach","new_obj","data","createdAt","toDate","push","reverse","onSend","messageArray","msg","mymsg","sentBy","current","sentTo","craetedAt","Date","chatId","previousMessages","myDoc","toString","then","id","catch","error","message","map","item","key","text"],"mappings":"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","sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { query, where } from \"firebase/firestore\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { authentication, db } from '../firebase-config';\r\nimport { useState, useEffect } from \"react\";\r\nimport Messenger from \"./Messenger\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { MdSend } from \"react-icons/md\";\r\nfunction Message(){\r\n    const location = useLocation();\r\n    const [messages, setMessages] = useState([]);\r\n    const [temp, setTemp] = useState([]);\r\n    const messageClass = userid === authentication.currentUser.userid ? 'sent' : 'received';\r\n\r\n    const querySnapshot = async () => {\r\n      console.log(\"State\",location.state.docid);\r\n      const col = collection(db, \"chatroom\");\r\n      const q = query(\r\n        col,\r\n        where(\r\n          \"chatId\",\r\n          \"==\",\r\n          location.state.userid + location.state.docid\r\n        )\r\n      );\r\n      const snap = await getDocs(q);\r\n      let messageArraay = [];\r\n      snap.forEach((doc) => {\r\n        const new_obj = {\r\n          ...doc.data(),\r\n          createdAt: doc.data().createdAt.toDate(),\r\n        };\r\n  \r\n        messageArraay.push(new_obj);\r\n      });\r\n      console.log(\"message array\",messageArraay);\r\n      setMessages(messageArraay.reverse());\r\n      console.log(\"msgs array\",messages)\r\n    };\r\n    useEffect(() => {\r\n      //console.log(props.route);\r\n      querySnapshot();\r\n    }, []);\r\n    const onSend = (messageArray) => {\r\n        const msg = messageArray[0];\r\n        const mymsg = {\r\n          ...msg,\r\n          sentBy:\r\n            location.state.current == \"doctor\"\r\n              ? location.state.docid\r\n              : location.state.userid,\r\n          sentTo:\r\n          location.state.current == \"doctor\"\r\n              ? location.state.userid\r\n              : location.state.docid,\r\n    \r\n          craetedAt: new Date(),\r\n          chatId:\r\n          location.state.userid +location.state.docid,\r\n        };\r\n        //setMessages((previousMessages) =>\r\n       // setTemp((prev) => [...prev, mymsg]);\r\n        //temp.append(previousMessages,mymsg);\r\n      //GiftedChat.append(previousMessages, mymsg)\r\n      //console.log(\"set messages\"+temp);\r\n    //);\r\n    setMessages((previousMessages) =>\r\n    setTemp((previousMessages) => [...previousMessages, mymsg])\r\n    );\r\n    //console.log(\"temppp\",temp);\r\n    const docid =\r\n    location.state.docid > location.state.userid\r\n        ? location.state.userid +\r\n          \"-\" +\r\n          location.state.docid\r\n        : location.state.docid +\r\n          \"-\" +\r\n          location.state.userid;\r\n\r\n    const myDoc = doc(db, \"chatroom\", new Date().toString());\r\n    setDoc(myDoc, mymsg)\r\n      .then(() => {\r\n        console.log(\"Document written with ID: \", myDoc.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error.message);\r\n      });\r\n  };\r\n \r\n  console.log(\"Doc id :\",location.state.docid)\r\n  console.log(\"User id\",location.state.userid)\r\n  console.log(\"temppp\",temp);\r\nreturn(\r\n<>\r\n\r\n\r\n<div className=\"messenger\">\r\n      <Messenger/>\r\n       <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n          {messages ? (<>\r\n        <div className='chatBoxTop'>\r\n        </div>\r\n        \r\n{messages.map((item,key)=>(\r\n  <div className={`message ${messageClass}`}>\r\n  <div className=\"messageTop\">\r\n  <p className='messageText'>{item.text} </p></div>\r\n  <div className=\"messageBottom\">1 hour ago</div>\r\n  </div>\r\n))}\r\n        <div className=\"chatBoxBottom\">\r\n    <textarea className=\"chatMessageInput\" placeholder=\"Write something..\"></textarea>\r\n    <button className=\"chatSubmitButton\">\r\n                  <div className='sendicon'>  <MdSend/></div>\r\n                  </button>\r\n </div> </>):(\r\n               <span className=\"noConversationText\">\r\n                 Open a conversation to start a chat.\r\n              </span>\r\n             )}\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      <Link to='/home'>\r\n      <div className='backtohome'><FaArrowCircleLeft/></div></Link>\r\n\r\n\r\n\r\n\r\n</>\r\n\r\n);\r\n\r\n}\r\nexport default Message; "]},"metadata":{},"sourceType":"module"}