{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Desktop\\\\OrthoDoc\\\\web\\\\src\\\\Pages\\\\ViewAppointmentsByAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport AdminSidebar from './AdminSidebar'; // import { useLocation } from 'react-router-dom';\n\nimport { db, authentication } from '../firebase-config';\nimport { collection, getDocs, where, query } from 'firebase/firestore';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewAppointmentsByAdmin() {\n  _s();\n\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    get();\n  }, []);\n\n  async function getAppointments() {\n    const list = [];\n    const docRef = await getDocs(query(collection(db, 'appointments'), where('status', '==', `active`)));\n    docRef.forEach(each => {\n      list.push({\n        id: each.id,\n        ...each.data()\n      });\n    });\n    setAppointments(list);\n    console.log(\"Arr\", appointments);\n    return list;\n  }\n\n  ;\n\n  async function get() {\n    const selectedAppointments = await getAppointments();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AdminSidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-heading\",\n          children: \"View Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), appointments.map(slot => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [slot.doctorId, \", \", slot.patientId, \" \", slot.status, \"  ,\", slot.timeSlot, \", \", new Date(slot.date.seconds * 1000).toDateString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 10\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewAppointmentsByAdmin, \"Ak+X7uRkII9H1+G0vSvhegLRL94=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ViewAppointmentsByAdmin;\nexport default ViewAppointmentsByAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewAppointmentsByAdmin\");","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/OrthoDoc/web/src/Pages/ViewAppointmentsByAdmin.js"],"names":["React","useEffect","useState","AdminSidebar","db","authentication","collection","getDocs","where","query","useLocation","useNavigate","ViewAppointmentsByAdmin","appointments","setAppointments","navigate","location","get","getAppointments","list","docRef","forEach","each","push","id","data","console","log","selectedAppointments","map","slot","doctorId","patientId","status","timeSlot","Date","date","seconds","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,SAASC,EAAT,EAAYC,cAAZ,QAAkC,oBAAlC;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAGA,SAASC,uBAAT,GAAkC;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMa,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,GAAG;AACJ,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeC,eAAf,GAAgC;AAC9B,UAAMC,IAAI,GAAE,EAAZ;AACA,UAAMC,MAAM,GAAG,MAAMb,OAAO,CAACE,KAAK,CAACH,UAAU,CAACF,EAAD,EAAK,cAAL,CAAX,EAAgCI,KAAK,CAAC,QAAD,EAAW,IAAX,EAAkB,QAAlB,CAArC,CAAN,CAA5B;AACEY,IAAAA,MAAM,CAACC,OAAP,CAAgBC,IAAD,IAAQ;AACrBH,MAAAA,IAAI,CAACI,IAAL,CAAW;AAACC,QAAAA,EAAE,EAACF,IAAI,CAACE,EAAT;AAAa,WAAGF,IAAI,CAACG,IAAL;AAAhB,OAAX;AACD,KAFD;AAGAX,IAAAA,eAAe,CAACK,IAAD,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBd,YAAlB;AACA,WAAOM,IAAP;AACH;;AAAA;;AAED,iBAAeF,GAAf,GAAoB;AAClB,UAAMW,oBAAoB,GAAG,MAAMV,eAAe,EAAlD;AACD;;AAIH,sBAAQ;AAAA,2BACP,QAAC,YAAD;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIKL,YAAY,CAACgB,GAAb,CAAkBC,IAAD,iBACjB;AAAA,qBAAIA,IAAI,CAACC,QAAT,QAAqBD,IAAI,CAACE,SAA1B,OAAsCF,IAAI,CAACG,MAA3C,SAAsDH,IAAI,CAACI,QAA3D,QAAwE,IAAIC,IAAJ,CAASL,IAAI,CAACM,IAAL,CAAUC,OAAV,GAAkB,IAA3B,EAAiCC,YAAjC,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADO,mBAAR;AAiBC;;GA3CQ1B,uB;UAEUD,W,EACAD,W;;;KAHVE,uB;AA4CT,eAAeA,uBAAf","sourcesContent":["import React from 'react';\r\nimport {  useEffect, useState } from \"react\";\r\n\r\nimport AdminSidebar from './AdminSidebar';\r\n// import { useLocation } from 'react-router-dom';\r\nimport { db,authentication } from '../firebase-config';\r\nimport { collection, getDocs, where, query } from 'firebase/firestore';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction ViewAppointmentsByAdmin(){\r\n  const [appointments, setAppointments] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(()=>{\r\n    get();\r\n  }, [])\r\n\r\n  async function getAppointments(){\r\n    const list =[];\r\n    const docRef = await getDocs(query(collection(db, 'appointments'),where('status', '==', `active`)));\r\n      docRef.forEach((each)=>{\r\n        list.push( {id:each.id, ...each.data()});\r\n      })\r\n      setAppointments(list);\r\n      console.log(\"Arr\",appointments);\r\n      return list;\r\n  };\r\n\r\n  async function get(){\r\n    const selectedAppointments = await getAppointments();\r\n  }\r\n\r\n\r\n   \r\nreturn( <>\r\n <AdminSidebar>\r\n    <div className=\"main-main\">\r\n      <div className=\"search-heading\">View Appointments</div>   \r\n      \r\n      {\r\n         appointments.map((slot)=>\r\n         <p>{slot.doctorId}, {slot.patientId} {slot.status}  ,{slot.timeSlot}, { new Date(slot.date.seconds*1000).toDateString()  } </p>\r\n\r\n\r\n         )\r\n\r\n      }\r\n             </div></AdminSidebar>\r\n    </>\r\n)\r\n\r\n}\r\nexport default ViewAppointmentsByAdmin;"]},"metadata":{},"sourceType":"module"}